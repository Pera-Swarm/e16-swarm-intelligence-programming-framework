{"version":3,"sources":["Redux/FirmwareFile.js","images/PeraSwarm.png","components/Menu/MenuComponent.js","Redux/SidemenuMargin.js","components/Sider/SiderComponent.js","images/uop.png","components/Footer/FooterComponent.js","Redux/CodeGenSteps.js","pages/Dashboard/DynamicCodeGenerationForm.js","pages/Mqtt/Connection.js","pages/Mqtt/Publisher.js","pages/Mqtt/Subscriber.js","pages/Mqtt/Receiver.js","pages/Mqtt/Mqtt.js","components/BlocklyComponent/generator/cpp.js","components/BlocklyComponent/generator/logic.js","components/BlocklyComponent/generator/math.js","components/BlocklyComponent/generator/variables.js","components/BlocklyComponent/generator/procedures.js","components/BlocklyComponent/custom-blocks/index.js","components/BlocklyComponent/BlocklyComponent.jsx","components/BlocklyComponent/index.js","pages/Playground/Playground.js","pages/Dashboard/Dashboard.js","pages/Pages.js","Layoutview.js","App.js","reportWebVitals.js","Redux/Store.js","index.js"],"names":["firmwareFileSlice","createSlice","name","initialState","firmwareFile","dynamicCodeObject","formResult","algorithmName","generatedCppCode","generatedXmlCode","reducers","change","state","action","payload","setDynamicCode","setFormResult","setAlgorithmName","setGeneratedCppCode","setGeneratedXmlCode","_firmwareFileSlice$ac","actions","MenuComponent","location","useLocation","navigate","useNavigate","getItem","label","key","icon","children","theme","items","_jsx","AppstoreFilled","CloudUploadOutlined","_jsxs","_Fragment","className","style","marginTop","marginLeft","marginBottom","alt","src","PeraSwarm","width","Menu","mode","selectedKeys","pathname","onClick","e","padding","marginSlice","margin","SiderComponent","Sider","Layout","useSelector","dispatch","useDispatch","collapsed","onCollapse","overflow","height","position","left","top","bottom","FooterComponent","Footer","marginRight","UopLogo","codeGenSlice","step","increase","decrease","_codeGenSlice$actions","DynamicCodeGenerationForm","Option","Select","_useState","useState","_useState2","_slicedToArray","motors","setMotors","_useState3","_useState4","distanceSensor","setDistanceSensor","_useSelector","firmware","_useState5","_useState6","copyState","setCopyState","useEffect","ENABLE_MOTORS","ENABLE_DISTANCE_SENSOR","CopyBlock","text","language","googlecode","customStyle","showLineNumbers","codeBlock","Form","onFinish","values","DRIVE_SERVO","DRIVE_PWM","DISTANCE_GP2Y0A21YK0F","DISTANCE_VL53LX0","message","error","ENABLE_MQTT","ENABLE_WIFI","features","value","ALGORITHM","isEnabled","ENABLE_SERIAL_COMMUNICATION","extra","NEOPIXEL_INDICATIONS","ENABLE_MEMORY","dependencies","WHEEL_ENCODER","ENABLE_NEOPIXEL_RING","ENABLE_COLOR_SENSOR","ENABLE_COMPASS_SENSOR","ENABLE_OTA_UPLOAD","initialValues","FIRMWARE","concat","toUpperCase","undefined","Row","Col","xxl","xl","lg","md","sm","xs","Item","rules","required","showSearch","placeholder","optionFilterProp","onChange","console","log","changeFirmwareFile","onSearch","size","filterOption","input","option","_option$label","toLowerCase","includes","options","Tooltip","title","CopyOutlined","navigator","clipboard","writeText","setTimeout","defaultValue","valuePropName","noStyle","Checkbox","target","checked","Button","StepBackwardOutlined","type","htmlType","StepForwardOutlined","Connection","_ref","connect","disconnect","connectBtn","_Form$useForm","useForm","form","record","host","clientId","Math","random","toString","substr","port","ConnectionForm","layout","username","password","url","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","topic","qos","retain","rejectUnauthorized","gutter","span","Input","Card","submit","danger","Publisher","publish","qosOptions","useContext","QosOption","PublishForm","TextArea","offset","textAlign","Subscriber","sub","unSub","showUnsub","SubForm","getFieldsValue","Receiver","messages","setMessages","_toConsumableArray","List","bordered","dataSource","renderItem","item","Meta","description","createContext","qosOption","Mqtt","client","setClient","isSubed","setIsSub","setPayload","_useState7","_useState8","connectStatus","setConnectStatus","on","err","end","mqttOption","mqtt","Provider","subscription","subscribe","unsubscribe","context","Blockly","C_VARIABLE_TYPES","SWARM_ALGO_SIGNATURES","C_GLOBAL_VARS","addReservedWords","INFINITE_LOOP_TRAP","ORDER_ATOMIC","ORDER_MEMBER","ORDER_FUNCTION_CALL","ORDER_INCREMENT","ORDER_DECREMENT","ORDER_LOGICAL_NOT","ORDER_BITWISE_NOT","ORDER_UNARY_PLUS","ORDER_UNARY_NEGATION","ORDER_MULTIPLICATION","ORDER_DIVISION","ORDER_MODULUS","ORDER_ADDITION","ORDER_SUBTRACTION","ORDER_BITWISE_SHIFT","ORDER_RELATIONAL","ORDER_EQUALITY","ORDER_BITWISE_AND","ORDER_BITWISE_XOR","ORDER_BITWISE_OR","ORDER_LOGICAL_AND","ORDER_LOGICAL_OR","ORDER_CONDITIONAL","ORDER_ASSIGNMENT","ORDER_COMMA","ORDER_NONE","isInitialized","init","workspace","Object","getPrototypeOf","this","call","nameDB_","reset","RESERVED_WORDS_","setVariableMap","getVariableMap","populateVariables","populateProcedures","definitions_","create","algorithm_","Date","now","times_","functionNames_","variableDB_","defvars","variables","allUsedVarModels","x","length","getName","NAME_TYPE","join","finish","code","prefixLines","INDENT","declarations","defines","func_definitions","def","match","push","allDefs","allFuncs","algorithmDefStart","algorithm","replace","finishFull","definitions","indexOf","scrubNakedValue","line","quote_","string","scrub_","block","commentCode","outputConnection","targetConnection","comment","getCommentText","inputList","childBlock","connection","targetBlock","allNestedComments","nextBlock","nextConnection","blockToCode","branchParams","statementToCode","params","split","i","substring","lastIndexOf","text_class_name","getFieldValue","statements_class_body","parentBlock_","returnType","methodName","branch","text_parameter_name","text_pointer_name","class_name","validateWorkspace","wp","cppGenerator","branchCode","conditionCode","n","valueToCode","STATEMENT_PREFIX","injectId","STATEMENT_SUFFIX","getInput","operator","order","Number","Names","NameType","VARIABLE","argument0","funcName","PROCEDURE","xfix1","loopTrap","returnValue","xfix2","args","getVars","ORDER_UNARY_POSTFIX","variable_interrupt_variable","Variables","variable_msg_variable","statements_interrupt_body","Blocks","appendDummyInput","appendField","FieldNumber","setInputsInline","setPreviousStatement","setNextStatement","setColour","setTooltip","setHelpUrl","FieldTextInput","FieldVariable","appendStatementInput","setCheck","text_msg","number_delay_s","variable_name","variable_robot_state_label","number_robot_state_value","body","FieldDropdown","appendValueInput","setOutput","FieldLabelSerializable","initialValue","variable_var_name","dropdown_var_type","dropdown_color_input","setAlign","ALIGN_RIGHT","setLocale","locale","BlocklyComponent","props","blocklyDiv","useRef","toolbox","primaryWorkspace","generateCode","cppGen","current","workspaceToCode","generateXML","xmlDom","Xml","workspaceToDom","xmlText","domToPrettyText","initialXml","rest","_objectWithoutProperties","_excluded","inject","_objectSpread","domToWorkspace","textToDom","React","Fragment","ref","id","display","Block","p","is","createElement","Category","_excluded2","Playground","readOnly","trashcan","media","move","scrollbars","drag","wheel","grid","spacing","colour","snap","zoom","controls","startScale","maxScale","minScale","scaleSpeed","custom","socket","io","Dashboard","Step","Steps","connected","isConnected","setIsConnected","msgs","setMsgs","robotId","setRobotId","data","terminalDiv","document","getElementById","scrollTop","scrollHeight","off","handleBuild","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_response$data","response","wrap","_context","prev","next","axios","post","algorithm_name","algorithm_body","robot_id","sent","msg","loading","t0","stop","apply","arguments","BuildOutlined","CodeSandboxOutlined","FireOutlined","CodeOutlined","Pages","Routes","Route","path","exact","element","Layoutview","Content","marginVariable","setMarginVariable","minHeight","App","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Store","configureStore","reducer","SidemenuMarginReducer","firmwareFileSliceReducer","CodeGenStepsReducer","ReactDOM","createRoot","render","store"],"mappings":"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","file":"static/js/main.38afa424.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  firmwareFile: null,\r\n  dynamicCodeObject: null,\r\n  formResult: null,\r\n  algorithmName: null,\r\n  generatedCppCode: null,\r\n  generatedXmlCode: null\r\n};\r\n\r\nexport const firmwareFileSlice = createSlice({\r\n  name: \"firmware_file\",\r\n  initialState,\r\n  reducers: {\r\n    change: (state, action) => {\r\n      state.firmwareFile = action.payload\r\n    },\r\n    setDynamicCode: (state, action) => {\r\n      state.dynamicCodeObject = action.payload\r\n    },\r\n    setFormResult: (state, action) => {\r\n      state.formResult = action.payload\r\n    },\r\n    setAlgorithmName: (state, action) => {\r\n      state.algorithmName = action.payload\r\n    },\r\n    setGeneratedCppCode: (state, action) => {\r\n      state.generatedCppCode = action.payload\r\n    },\r\n    setGeneratedXmlCode: (state, action) => {\r\n      state.generatedXmlCode = action.payload\r\n    }\r\n  }\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { change, setDynamicCode, setFormResult, setAlgorithmName, setGeneratedCppCode, setGeneratedXmlCode } = firmwareFileSlice.actions;\r\n\r\nexport default firmwareFileSlice.reducer;","export default __webpack_public_path__ + \"static/media/PeraSwarm.9c098688.png\";","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Select, Menu } from 'antd';\r\nimport { change } from '../../Redux/FirmwareFile';\r\nimport {\r\n  AppstoreFilled,\r\n  BuildOutlined,\r\n  CloudUploadOutlined\r\n} from '@ant-design/icons'\r\nimport { useLocation } from 'react-router-dom';\r\nimport './MenuComponent.css'\r\n\r\n// menu item icons\r\nimport PeraSwarm from '../../images/PeraSwarm.png'\r\n\r\nfunction MenuComponent() {\r\n\r\n  const location = useLocation()\r\n  const navigate = useNavigate()\r\n\r\n  // menu item structure\r\n  const getItem = (label, key, icon, children, theme) => {\r\n    return {\r\n      key,\r\n      icon,\r\n      children,\r\n      label,\r\n      theme,\r\n    };\r\n  }\r\n\r\n  const items = [\r\n    getItem('Home', '/', <AppstoreFilled />),\r\n    // getItem('Playground', '/playground', <BuildOutlined />),\r\n    getItem('MQTT', '/mqtt', <CloudUploadOutlined />),\r\n  ]\r\n\r\n  const onClick = (e) => {\r\n    navigate(e.key);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* main logo section */}\r\n      <div className='d-flex' style={{marginTop: '30px', marginLeft: '10px', marginBottom: '10px'}} >\r\n        <div>\r\n          <img alt='pera-swarm-main-logo' src={PeraSwarm} style={{ width: '40px', marginLeft: '20px' }} />\r\n        </div>\r\n\r\n        <div className='my-auto' style={{marginLeft: '10px'}}>\r\n          <h2 className='text-light'>Pera Swarm</h2>\r\n        </div>\r\n      </div>\r\n\r\n      <Menu\r\n        mode=\"inline\"\r\n        selectedKeys={location.pathname}\r\n        theme=\"dark\"\r\n        onClick={onClick}\r\n        style={{ padding: '1px' }}\r\n        items={items}\r\n        className=\"menu-background\"\r\n      />\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default MenuComponent\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  margin: false\r\n};\r\n\r\nexport const marginSlice = createSlice({\r\n  name: \"margin\",\r\n  initialState,\r\n  reducers: {\r\n    change: (state) => {\r\n      state.margin = !state.margin;\r\n    },\r\n  }\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { change } = marginSlice.actions;\r\n\r\nexport default marginSlice.reducer;","import React from 'react'\r\nimport { Layout } from 'antd';\r\nimport MenuComponent from '../Menu/MenuComponent';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { change } from '../../Redux/SidemenuMargin';\r\n\r\nfunction SiderComponent() {\r\n    const { Sider } = Layout;\r\n    const { margin } = useSelector((state) => state.margin);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        // side menu including menu\r\n        <Sider \r\n            // collapsible\r\n            collapsed={margin}\r\n            onCollapse={() => dispatch(change())}\r\n            width={280}\r\n            style={{\r\n                overflow: 'auto',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                left: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            }}\r\n        >\r\n            <MenuComponent />\r\n        </Sider>\r\n    )\r\n}\r\n\r\nexport default SiderComponent","export default __webpack_public_path__ + \"static/media/uop.a1dc49ee.png\";","import React from 'react'\r\nimport { Layout } from 'antd'\r\nimport PeraSwarm from '../../images/PeraSwarm.png'\r\nimport UopLogo from '../../images/uop.png'\r\n\r\nfunction FooterComponent() {\r\n\r\n  const { Footer } = Layout\r\n\r\n  return (\r\n    <Footer className='text-center'>\r\n      <span>Department of Comuputer Engineering - University of Peradeniya</span>\r\n      <div className='mt-2'>\r\n        <img src={PeraSwarm} alt=\"pera-swarm-logo\" style={{width: '30px', marginRight: '5px'}} />\r\n        <img src={UopLogo} alt=\"uop-logo\" style={{width: '30px', marginLeft: '5px'}} />\r\n      </div>\r\n    </Footer>\r\n  )\r\n}\r\n\r\nexport default FooterComponent","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  step: 0\r\n};\r\n\r\nexport const codeGenSlice = createSlice({\r\n  name: \"codegen_steps_slice\",\r\n  initialState,\r\n  reducers: {\r\n    increase: (state) => {\r\n      state.step += 1 \r\n    },\r\n    decrease: (state) => {\r\n        state.step -= 1 \r\n    }\r\n  }\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increase, decrease } = codeGenSlice.actions;\r\n\r\nexport default codeGenSlice.reducer;","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Form,\r\n    Select,\r\n    message,\r\n    Tooltip\r\n  } from 'antd';\r\nimport { Row, Col } from 'reactstrap';\r\nimport { setDynamicCode, setFormResult } from '../../Redux/FirmwareFile';\r\nimport { change as changeFirmwareFile } from '../../Redux/FirmwareFile';\r\nimport { increase, decrease } from '../../Redux/CodeGenSteps';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { StepForwardOutlined, StepBackwardOutlined, CopyOutlined } from '@ant-design/icons'\r\nimport { CopyBlock, dracula, googlecode } from 'react-code-blocks'\r\n\r\nfunction DynamicCodeGenerationForm() {\r\n\r\n    // antd related variables\r\n    const { Option } = Select\r\n\r\n    // form related variables to change the form dynamically\r\n    const [motors, setMotors] = useState(false)\r\n    const [distanceSensor, setDistanceSensor] = useState(false)\r\n\r\n    // redux related variables\r\n    const { formResult, algorithmName, generatedCppCode } = useSelector((state) => state.firmware);\r\n    const dispatch = useDispatch()\r\n\r\n    const [copyState, setCopyState] = useState(\"Copy\")\r\n\r\n    // code blocks related variables\r\n    const showLineNumbers = true\r\n    const codeBlock = true\r\n    \r\n    const handleCopy = () => {\r\n        setCopyState(\"Copied\")\r\n        navigator.clipboard.writeText(generatedCppCode)\r\n        setTimeout(function() {\r\n          setCopyState(\"Copy\")\r\n        }, 1000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMotors(formResult?.ENABLE_MOTORS)\r\n        setDistanceSensor(formResult?.ENABLE_DISTANCE_SENSOR)\r\n    }, [])\r\n\r\n    // store features object after assigning related values\r\n    const onFinish = (values) => {\r\n        // validations\r\n        if (values.ENABLE_MOTORS && !(values.DRIVE_SERVO || values.DRIVE_PWM)) {\r\n            message.error('Need to be enable either DRIVE SERVO or DRIVE PWM');\r\n        } else if (values.ENABLE_DISTANCE_SENSOR && !(values.DISTANCE_GP2Y0A21YK0F || values.DISTANCE_VL53LX0)) {\r\n            message.error('Need to enable either GP2Y0A21YK0F or VL53LX0 sensor');\r\n        } else if (values.ENABLE_DISTANCE_SENSOR && values.DISTANCE_GP2Y0A21YK0F && values.DISTANCE_VL53LX0) {\r\n            message.error('You can\\'t enable both GP2Y0A21YK0F and VL53LX0 sensors at once');\r\n        } else if (values.ENABLE_MQTT && !values.ENABLE_WIFI) {\r\n            message.error('Need to enable WiFi to enable the MQTT');\r\n        } else {\r\n\r\n            let features = [\r\n                { name: \"ALGORITHM\", value: values.ALGORITHM, isEnabled: values.ALGORITHM ? true : false },\r\n                { name: \"ENABLE_SERIAL_COMMUNICATION\", value: \"ENABLE_SERIAL_COMMUNICATION\", isEnabled: values.ENABLE_SERIAL_COMMUNICATION ? true : false, extra: [\"1\"] },\r\n                { name: \"NEOPIXEL_INDICATIONS\", value: \"NEOPIXEL_INDICATIONS\", isEnabled: values.NEOPIXEL_INDICATIONS ? true : false },\r\n                { name: \"ENABLE_MEMORY\", value: \"ENABLE_MEMORY\", isEnabled: values.ENABLE_MEMORY ? true : false },\r\n                { name: \"ENABLE_MOTORS\", value: \"ENABLE_MOTORS\", isEnabled: values.ENABLE_MOTORS ? true : false, dependencies: [\r\n                    { name: \"WHEEL_ENCODER\", value: \"WHEEL_ENCODER\", isEnabled: values.WHEEL_ENCODER ? true : false },\r\n                    { name: \"DRIVE_PWM\", value: \"DRIVE_PWM\", isEnabled: values.DRIVE_PWM ? true : false },\r\n                    { name: \"DRIVE_SERVO\", value: \"DRIVE_SERVO\", isEnabled: values.DRIVE_SERVO ? true : false },\r\n                ] },\r\n                { name: \"ENABLE_DISTANCE_SENSOR\", value: \"ENABLE_DISTANCE_SENSOR\", isEnabled: values.ENABLE_DISTANCE_SENSOR ? true : false, dependencies: [\r\n                    { name: \"DISTANCE_GP2Y0A21YK0F\", value: \"DISTANCE_GP2Y0A21YK0F\", isEnabled: values.DISTANCE_GP2Y0A21YK0F ? true : false },\r\n                    { name: \"DISTANCE_VL53LX0\", value: \"DISTANCE_VL53LX0\", isEnabled: values.DISTANCE_VL53LX0 ? true : false },\r\n                ] },\r\n                { name: \"ENABLE_NEOPIXEL_RING\", value: \"ENABLE_NEOPIXEL_RING\", isEnabled: values.ENABLE_NEOPIXEL_RING ? true : false },\r\n                { name: \"ENABLE_COLOR_SENSOR\", value: \"ENABLE_COLOR_SENSOR\", isEnabled: values.ENABLE_COLOR_SENSOR ? true : false },\r\n                { name: \"ENABLE_COMPASS_SENSOR\", value: \"ENABLE_COMPASS_SENSOR\", isEnabled: values.ENABLE_COMPASS_SENSOR ? true : false },\r\n                { name: \"ENABLE_OTA_UPLOAD\", value: \"ENABLE_OTA_UPLOAD\", isEnabled: values.ENABLE_OTA_UPLOAD ? true : false },\r\n                { name: \"ENABLE_MQTT\", value: \"ENABLE_MQTT\", isEnabled: values.ENABLE_MQTT ? true : false },\r\n                { name: \"ENABLE_WIFI\", value: \"ENABLE_WIFI\", isEnabled: values.ENABLE_WIFI ? true : false }\r\n            ]\r\n\r\n            dispatch(setDynamicCode(features)) // store dynamically generated feature object\r\n            dispatch(setFormResult(values)) // store form result \r\n            dispatch(increase()) // increase the step \r\n        }\r\n    };\r\n\r\n    const onChange = (value) => {\r\n        console.log(`selected ${value}`);\r\n        dispatch(changeFirmwareFile(value))\r\n    };\r\n    \r\n    const onSearch = (value) => {\r\n        console.log('search:', value);\r\n    };\r\n    \r\n    // firmware files\r\n    const files = [\r\n        {\r\n            value: 'esp_robot_firmware',\r\n            label: 'ESP-Firmware-01'\r\n        }\r\n    ]\r\n\r\n  return (\r\n    <div className='mt-1 mb-5'>\r\n\r\n        {/* generated cpp code */}\r\n        {/* <div className='terminal p-4' id=\"terminalDiv\">\r\n            <span className='response-msg text-light'>\r\n                {generatedCppCode}\r\n            </span>\r\n        </div> */}\r\n        <div className='code-block mt-3'>\r\n            <CopyBlock\r\n            text={generatedCppCode}\r\n            language={'cpp'}\r\n            theme={googlecode}\r\n            customStyle={{\r\n                height: '300px',\r\n                overflow: 'scroll',\r\n            }}\r\n            {...{ showLineNumbers, codeBlock }}\r\n            />\r\n        </div>\r\n\r\n\r\n        <div className='mt-3'>\r\n            {/* dynamic code generation form */}\r\n            <Form\r\n                name=\"dynamic_code_generation\"\r\n                onFinish={onFinish}\r\n                initialValues={{\r\n                    FIRMWARE: formResult?.FIRMWARE,\r\n                    ALGORITHM: algorithmName ? `ALGO_${algorithmName.toUpperCase()}` : '',\r\n                    ENABLE_SERIAL_COMMUNICATION: formResult?.ENABLE_SERIAL_COMMUNICATION !== undefined ? formResult?.ENABLE_SERIAL_COMMUNICATION : true,\r\n                    NEOPIXEL_INDICATIONS: formResult?.NEOPIXEL_INDICATIONS !== undefined ? formResult?.NEOPIXEL_INDICATIONS : true,\r\n                    ENABLE_MEMORY: formResult?.ENABLE_MEMORY !== undefined ? formResult?.ENABLE_MEMORY : true,\r\n                    ENABLE_NEOPIXEL_RING: formResult?.ENABLE_NEOPIXEL_RING !== undefined ? formResult?.ENABLE_NEOPIXEL_RING : true,\r\n                    ENABLE_COLOR_SENSOR: formResult?.ENABLE_COLOR_SENSOR !== undefined ? formResult?.ENABLE_COLOR_SENSOR : true,\r\n                    ENABLE_COMPASS_SENSOR: formResult?.ENABLE_COMPASS_SENSOR !== undefined ? formResult?.ENABLE_COMPASS_SENSOR : true,\r\n                    ENABLE_OTA_UPLOAD: formResult?.ENABLE_OTA_UPLOAD !== undefined ? formResult?.ENABLE_OTA_UPLOAD : true,\r\n                    ENABLE_MQTT: formResult?.ENABLE_MQTT !== undefined ? formResult?.ENABLE_MQTT : true,\r\n                    ENABLE_WIFI: formResult?.ENABLE_WIFI !== undefined ? formResult?.ENABLE_WIFI : true,\r\n                    ENABLE_MOTORS: formResult?.ENABLE_MOTORS,\r\n                    DRIVE_PWM: formResult?.DRIVE_PWM,\r\n                    WHEEL_ENCODER: formResult?.WHEEL_ENCODER,\r\n                    DRIVE_SERVO: formResult?.DRIVE_SERVO,\r\n                    ENABLE_DISTANCE_SENSOR: formResult?.ENABLE_DISTANCE_SENSOR,\r\n                    DISTANCE_GP2Y0A21YK0F: formResult?.DISTANCE_GP2Y0A21YK0F,\r\n                    DISTANCE_VL53LX0: formResult?.DISTANCE_VL53LX0\r\n                }}\r\n            >\r\n                <Row>\r\n                    <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\" sm=\"12\" xs=\"12\">\r\n                        <h6>FIRMWARE FILE</h6>\r\n                        <Form.Item\r\n                            name=\"FIRMWARE\"\r\n                            rules={[\r\n                                {\r\n                                required: true,\r\n                                message: 'Please select a firmware file!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select\r\n                                className='col-12'\r\n                                showSearch\r\n                                placeholder=\"Search to select firmware file\"\r\n                                optionFilterProp=\"children\"\r\n                                onChange={onChange}\r\n                                onSearch={onSearch}\r\n                                size=\"large\"\r\n                                filterOption={(input, option) =>\r\n                                    (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                                }\r\n                                options={files}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\" sm=\"12\" xs=\"12\">\r\n                        <div className='d-flex'>\r\n                            <h6>ALGORITHM</h6>\r\n                            \r\n                            <div style={{marginLeft: '5px', marginTop: '-4px'}}>\r\n                                <Tooltip title={copyState}>\r\n                                    <CopyOutlined onClick={() => handleCopy()} />\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                        <Form.Item\r\n                            name=\"ALGORITHM\"\r\n                            rules={[\r\n                                {\r\n                                required: true,\r\n                                message: 'Please select an algorithm!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select\r\n                                placeholder=\"Select the algorithm\"\r\n                                size=\"large\"\r\n                                value={`ALGO_${algorithmName.toUpperCase()}`}\r\n                                defaultValue={`ALGO_${algorithmName.toUpperCase()}`}\r\n                            >\r\n                                <Option value={`ALGO_${algorithmName.toUpperCase}`}>{`ALGO_${algorithmName.toUpperCase()}`}</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row>\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"ENABLE_SERIAL_COMMUNICATION\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox>ENABLE SERIAL COMMUNICATION</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"NEOPIXEL_INDICATIONS\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox>NEOPIXEL INDICATIONS</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"ENABLE_MEMORY\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox>ENABLE MEMORY</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"ENABLE_NEOPIXEL_RING\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox>ENABLE NEOPIXEL RING</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"ENABLE_COLOR_SENSOR\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox>ENABLE COLOR SENSOR</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"ENABLE_COMPASS_SENSOR\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox>ENABLE COMPASS SENSOR</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"ENABLE_OTA_UPLOAD\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox>ENABLE OTA UPLOAD</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"ENABLE_MQTT\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox>ENABLE MQTT</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"ENABLE_WIFI\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox>ENABLE WIFI</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className='mt-3'>\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"ENABLE_MOTORS\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox onChange={(e) => setMotors(e.target.checked)}><h6>MOTORS</h6></Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className='mt-2'>\r\n                    {\r\n                        motors &&\r\n                        <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                            <Form.Item \r\n                                name=\"DRIVE_PWM\" \r\n                                valuePropName=\"checked\" \r\n                                noStyle\r\n                            >\r\n                                <Checkbox>DRIVE PWM</Checkbox>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    }\r\n\r\n                    {\r\n                        motors &&\r\n                        <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                            <Form.Item \r\n                                name=\"DRIVE_SERVO\" \r\n                                valuePropName=\"checked\" \r\n                                noStyle\r\n                            >\r\n                                <Checkbox>DRIVE SERVO</Checkbox>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    }\r\n\r\n                    {\r\n                        motors &&\r\n                        <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                            <Form.Item \r\n                                name=\"WHEEL_ENCODER\" \r\n                                valuePropName=\"checked\" \r\n                                noStyle\r\n                            >\r\n                                <Checkbox>WHEEL ENCODER</Checkbox>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    }\r\n                </Row>\r\n\r\n                <Row className='mt-3'>\r\n                    <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                        <Form.Item \r\n                            name=\"ENABLE_DISTANCE_SENSOR\" \r\n                            valuePropName=\"checked\" \r\n                            noStyle\r\n                        >\r\n                            <Checkbox onChange={(e) => setDistanceSensor(e.target.checked)}><h6>DISTANCE SENSOR</h6></Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Row className='mt-2'>\r\n                        {\r\n                            distanceSensor &&\r\n                            <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                                <Form.Item \r\n                                    name=\"DISTANCE_GP2Y0A21YK0F\" \r\n                                    valuePropName=\"checked\" \r\n                                    noStyle\r\n                                >\r\n                                    <Checkbox>DISTANCE GP2Y0A21YK0F</Checkbox>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        }\r\n\r\n                        {\r\n                            distanceSensor &&\r\n                            <Col xxl=\"3\" xl=\"3\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"6\" className='my-auto'>\r\n                                <Form.Item \r\n                                    name=\"DISTANCE_VL53LX0\" \r\n                                    valuePropName=\"checked\" \r\n                                    noStyle\r\n                                >\r\n                                    <Checkbox>DISTANCE VL53LX0</Checkbox>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n\r\n                </Row>\r\n\r\n                <Row className='text-center mt-3'>\r\n                    <Form.Item>\r\n                        <div className='d-flex justify-content-center'>\r\n                            <Button style={{marginRight: '5px'}} onClick={() => dispatch(decrease())}>\r\n                                <div className='d-flex'>\r\n                                    <div style={{marginTop: '-3px', marginRight: '3px'}}><StepBackwardOutlined /></div>\r\n                                    <div>Back</div>\r\n                                </div>\r\n                            </Button>\r\n\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                <div className='d-flex'>\r\n                                    <div>Next</div>\r\n                                    <div style={{marginTop: '-3px', marginRight: '3px'}}><StepForwardOutlined /></div>\r\n                                </div>\r\n                            </Button>\r\n                        </div>\r\n                    </Form.Item>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DynamicCodeGenerationForm","import React from 'react';\r\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\r\n\r\nconst Connection = ({ connect, disconnect, connectBtn }) => {\r\n  const [form] = Form.useForm();\r\n  const record = {\r\n    host: 'broker.emqx.io',\r\n    clientId: `swarm_client + ${Math.random().toString(16).substr(2, 8)}`,\r\n    port: 8083,\r\n  };\r\n  const onFinish = (values) => {\r\n    const { host, clientId, port, username, password } = values;\r\n    const url = `ws://${host}:${port}/mqtt`;\r\n    const options = {\r\n      keepalive: 30,\r\n      protocolId: 'MQTT',\r\n      protocolVersion: 4,\r\n      clean: true,\r\n      reconnectPeriod: 1000,\r\n      connectTimeout: 30 * 1000,\r\n      will: {\r\n        topic: 'WillMsg',\r\n        payload: 'Connection Closed abnormally..!',\r\n        qos: 0,\r\n        retain: false\r\n      },\r\n      rejectUnauthorized: false\r\n    };\r\n    options.clientId = clientId;\r\n    options.username = username;\r\n    options.password = password;\r\n    connect(url, options);\r\n  };\r\n\r\n  const handleConnect = () => {\r\n    form.submit();\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    disconnect();\r\n  };\r\n\r\n  const ConnectionForm = (\r\n    <Form\r\n      layout=\"vertical\"\r\n      name=\"basic\"\r\n      form={form}\r\n      initialValues={record}\r\n      onFinish={onFinish}\r\n    >\r\n      <Row gutter={20}>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            label=\"Host\"\r\n            name=\"host\"\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            label=\"Port\"\r\n            name=\"port\"\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            label=\"Client ID\"\r\n            name=\"clientId\"\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n\r\n  return (\r\n    <Card\r\n      title=\"Connection\"\r\n      actions={[\r\n        <Button type=\"primary\" onClick={handleConnect}>{connectBtn}</Button>,\r\n        <Button danger onClick={handleDisconnect}>Disconnect</Button>\r\n      ]}\r\n    >\r\n      {ConnectionForm}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Connection;","import React, { useContext } from 'react';\r\nimport { Card, Form, Input, Row, Col, Button, Select } from 'antd';\r\nimport { QosOption } from './Mqtt'\r\n\r\nconst Publisher = ({ publish }) => {\r\n  const [form] = Form.useForm();\r\n  const qosOptions = useContext(QosOption);\r\n\r\n  const record = {\r\n    topic: 'swarm-topic/sensor-data',\r\n    qos: 0,\r\n    payload: '{\"sensor-data\" : \"sample-sensor-data\"}'\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    publish(values)\r\n  };\r\n\r\n  const PublishForm = (\r\n    <Form\r\n      layout=\"vertical\"\r\n      name=\"basic\"\r\n      form={form}\r\n      initialValues={record}\r\n      onFinish={onFinish}\r\n    >\r\n      <Row gutter={20}>\r\n        <Col span={12}>\r\n          <Form.Item\r\n            label=\"Topic\"\r\n            name=\"topic\"\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item\r\n            label=\"QoS\"\r\n            name=\"qos\"\r\n          >\r\n            <Select options={qosOptions} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Form.Item\r\n            label=\"Payload\"\r\n            name=\"payload\"\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8} offset={16} style={{ textAlign: 'right' }}>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Publish\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n\r\n  return (\r\n    <Card\r\n      title=\"Publisher\"\r\n    >\r\n      {PublishForm}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Publisher;","import React, { useContext } from 'react';\r\nimport { Card, Form, Input, Row, Col, Button, Select } from 'antd';\r\nimport { QosOption } from './Mqtt'\r\n\r\nconst Subscriber = ({ sub, unSub, showUnsub }) => {\r\n  const [form] = Form.useForm();\r\n  const qosOptions = useContext(QosOption);\r\n\r\n  const record = {\r\n    topic: 'swarm-topic/sensor-data',\r\n    qos: 0,\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    sub(values);\r\n  };\r\n\r\n  const handleUnsub = () => {\r\n    const values = form.getFieldsValue();\r\n    unSub(values);\r\n  };\r\n\r\n  const SubForm = (\r\n    <Form\r\n      layout=\"vertical\"\r\n      name=\"basic\"\r\n      form={form}\r\n      initialValues={record}\r\n      onFinish={onFinish}\r\n    >\r\n      <Row gutter={20}>\r\n        <Col span={12}>\r\n          <Form.Item\r\n            label=\"Topic\"\r\n            name=\"topic\"\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item\r\n            label=\"QoS\"\r\n            name=\"qos\"\r\n          >\r\n            <Select options={qosOptions} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8} offset={16} style={{ textAlign: 'right' }}>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Subscribe\r\n            </Button>\r\n            {\r\n              showUnsub ?\r\n                <Button type=\"danger\" style={{ marginLeft: '10px' }} onClick={handleUnsub}>\r\n                  Unsubscribe\r\n                </Button>\r\n                : null\r\n            }\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n\r\n  return (\r\n    <Card\r\n      title=\"Subscriber\"\r\n    >\r\n      {SubForm}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Subscriber;","import React, { useEffect, useState } from 'react';\r\nimport { Card, List } from 'antd';\r\n\r\nconst Receiver = ({ payload }) => {\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (payload.topic) {\r\n      setMessages(messages => [...messages, payload])\r\n    }\r\n  }, [payload])\r\n\r\n  const renderListItem = (item) => (\r\n    <List.Item>\r\n      <List.Item.Meta\r\n        title={item.topic}\r\n        description={item.message}\r\n      />\r\n    </List.Item>\r\n  )\r\n\r\n  return (\r\n    <Card\r\n      title=\"Receiver\"\r\n    >\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={messages}\r\n        renderItem={renderListItem}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Receiver;","import React, { createContext, useEffect, useState } from 'react';\r\nimport Connection from './Connection';\r\nimport Publisher from './Publisher';\r\nimport Subscriber from './Subscriber';\r\nimport Receiver from './Receiver';\r\nimport mqtt from 'mqtt';\r\n\r\nexport const QosOption = createContext([])\r\nconst qosOption = [\r\n  {\r\n    label: '0',\r\n    value: 0,\r\n  }, {\r\n    label: '1',\r\n    value: 1,\r\n  }, {\r\n    label: '2',\r\n    value: 2,\r\n  },\r\n];\r\n\r\nconst Mqtt = () => {\r\n  const [client, setClient] = useState(null);\r\n  const [isSubed, setIsSub] = useState(false);\r\n  const [payload, setPayload] = useState({});\r\n  const [connectStatus, setConnectStatus] = useState('Connect');\r\n\r\n  const mqttConnect = (host, mqttOption) => {\r\n    setConnectStatus('Connecting');\r\n    setClient(mqtt.connect(host, mqttOption));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (client) {\r\n      client.on('connect', () => {\r\n        setConnectStatus('Connected');\r\n      });\r\n      client.on('error', (err) => {\r\n        console.error('Connection error: ', err);\r\n        client.end();\r\n      });\r\n      client.on('reconnect', () => {\r\n        setConnectStatus('Reconnecting');\r\n      });\r\n      client.on('message', (topic, message) => {\r\n        const payload = { topic, message: message.toString() };\r\n        setPayload(payload);\r\n      });\r\n    }\r\n  }, [client]);\r\n\r\n  const mqttDisconnect = () => {\r\n    if (client) {\r\n      client.end(() => {\r\n        setConnectStatus('Connect');\r\n      });\r\n    }\r\n  }\r\n\r\n  const mqttPublish = (context) => {\r\n    if (client) {\r\n      const { topic, qos, payload } = context;\r\n      client.publish(topic, payload, { qos }, error => {\r\n        if (error) {\r\n          console.log('Publish error: ', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const mqttSub = (subscription) => {\r\n    if (client) {\r\n      const { topic, qos } = subscription;\r\n      client.subscribe(topic, { qos }, (error) => {\r\n        if (error) {\r\n          console.log('Subscribe to topics error', error)\r\n          return\r\n        }\r\n        setIsSub(true)\r\n      });\r\n    }\r\n  };\r\n\r\n  const mqttUnSub = (subscription) => {\r\n    if (client) {\r\n      const { topic } = subscription;\r\n      client.unsubscribe(topic, error => {\r\n        if (error) {\r\n          console.log('Unsubscribe error', error)\r\n          return\r\n        }\r\n        setIsSub(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Connection connect={mqttConnect} disconnect={mqttDisconnect} connectBtn={connectStatus} />\r\n      <QosOption.Provider value={qosOption}>\r\n        <Subscriber sub={mqttSub} unSub={mqttUnSub} showUnsub={isSubed} />\r\n        <Publisher publish={mqttPublish} />\r\n      </QosOption.Provider>\r\n      <Receiver payload={payload}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Mqtt;","import * as Blockly from \"blockly/core\";\r\nimport { Workspace } from \"blockly/core\";\r\n\r\n/* eslint-disable no-undef */\r\n// goog.provide(\"Blockly.cpp\");\r\n// goog.require(\"Blockly.Generator\");\r\n\r\nBlockly.cpp = new Blockly.Generator(\"cpp\");\r\n\r\nBlockly.cpp.C_VARIABLE_TYPES = [\r\n  [\"float\", \"float\"],\r\n  [\"int\", \"int\"],\r\n  [\"unsigned int\", \"unsigned int\"],\r\n  [\"short\", \"short\"],\r\n  [\"unsigned short\", \"unsigned short\"],\r\n  [\"bool\", \"bool\"],\r\n];\r\n\r\nBlockly.cpp.SWARM_ALGO_SIGNATURES = [\r\n  \"algorithm_setup\",\r\n  \"algorithm_start\",\r\n  \"algorithm_execute\",\r\n  \"algorithm_interrupt\",\r\n  \"algorithm_reset\",\r\n  \"algorithm_stop\",\r\n];\r\n\r\nBlockly.cpp.C_GLOBAL_VARS = [];\r\n\r\n// http://en.cppreference.com/w/cpp/keyword\r\nBlockly.cpp.addReservedWords(\r\n  \",alignas,alignof,and,and_eq,asm,auto,bitand,bitor,bool,break,case,catch,char,char16_t,char32_t,class,compl,const,constexpr,const_cast,continue,decltype,default,delete,do,double,dynamic_cast,else,enum,explicit,export,extern,false,float,for,friend,goto,if,inline,int,long,long double,long long,mutable,namespace,new,noexcept,not,not_eq,nullptr,operator,or,or_eq,private,protected,public,register,reinterpret_cast,return,short,signed,sizeof,static,static_assert,static_cast,struct,switch,template,this,thread_local,throw,true,try,typedef,typeid,typename,union,unsigned,using,virtual,void,volatile,wchar_t,while,xor,xor_eq,posix,\" +\r\n    \"game,api,PI,PI2,PI3,PI4,DEG2RAD,RAD2DEG,ZRMS,ZR2D,ZR3D,ALLIANCE\"\r\n);\r\n\r\nBlockly.cpp.INFINITE_LOOP_TRAP = null;\r\n\r\nBlockly.cpp.ORDER_ATOMIC = 0; // 0 \"\" ...\r\nBlockly.cpp.ORDER_MEMBER = 2; // . []\r\nBlockly.cpp.ORDER_FUNCTION_CALL = 2; // ()\r\nBlockly.cpp.ORDER_INCREMENT = 3; // ++\r\nBlockly.cpp.ORDER_DECREMENT = 3; // --\r\nBlockly.cpp.ORDER_LOGICAL_NOT = 3; // !\r\nBlockly.cpp.ORDER_BITWISE_NOT = 3; // ~\r\nBlockly.cpp.ORDER_UNARY_PLUS = 3; // +\r\nBlockly.cpp.ORDER_UNARY_NEGATION = 3; // -\r\nBlockly.cpp.ORDER_MULTIPLICATION = 5; // *\r\nBlockly.cpp.ORDER_DIVISION = 5; // /\r\nBlockly.cpp.ORDER_MODULUS = 5; // %\r\nBlockly.cpp.ORDER_ADDITION = 6; // +\r\nBlockly.cpp.ORDER_SUBTRACTION = 6; // -\r\nBlockly.cpp.ORDER_BITWISE_SHIFT = 7; // << >>\r\nBlockly.cpp.ORDER_RELATIONAL = 8; // < <= > >=\r\nBlockly.cpp.ORDER_EQUALITY = 9; // == !=\r\nBlockly.cpp.ORDER_BITWISE_AND = 10; // &\r\nBlockly.cpp.ORDER_BITWISE_XOR = 11; // ^\r\nBlockly.cpp.ORDER_BITWISE_OR = 12; // |\r\nBlockly.cpp.ORDER_LOGICAL_AND = 13; // &&\r\nBlockly.cpp.ORDER_LOGICAL_OR = 14; // ||\r\nBlockly.cpp.ORDER_CONDITIONAL = 15; // ?:\r\nBlockly.cpp.ORDER_ASSIGNMENT = 15; // = += -= *= /= %= <<= >>= ...\r\nBlockly.cpp.ORDER_COMMA = 17; // ,\r\nBlockly.cpp.ORDER_NONE = 99; // (...)\r\n\r\nBlockly.cpp.isInitialized = false;\r\n\r\nBlockly.cpp.init = function (workspace) {\r\n  Object.getPrototypeOf(this).init.call(this);\r\n\r\n  if (!this.nameDB_) {\r\n    this.nameDB_ = new Blockly.Names(this.RESERVED_WORDS_);\r\n  } else {\r\n    this.nameDB_.reset();\r\n  }\r\n  // Create a dictionary of definitions to be printed before the code.\r\n   Blockly.cpp.nameDB_.setVariableMap(workspace.getVariableMap());\r\n   Blockly.cpp.nameDB_.populateVariables(workspace);\r\n   Blockly.cpp.nameDB_.populateProcedures(workspace);\r\n  Blockly.cpp.definitions_ = Object.create(null);\r\n  Blockly.cpp.algorithm_ = \"Algorithm_\" + Date.now();\r\n\r\n  Blockly.cpp.times_ = Object.create(null);\r\n  // Create a dictionary mapping desired function names in definitions_\r\n  // to actual function names (to avoid collisions with user functions).\r\n  Blockly.cpp.functionNames_ = Object.create(null);\r\n\r\n  if (Blockly.Variables) {\r\n    if (!Blockly.cpp.variableDB_) {\r\n      Blockly.cpp.variableDB_ = new Blockly.Names(Blockly.cpp.RESERVED_WORDS_);\r\n    } else {\r\n      Blockly.cpp.variableDB_.reset();\r\n    }\r\n\r\n    var defvars = [];\r\n    var variables = Blockly.Variables.allUsedVarModels(workspace);\r\n    // var structures = Blockly.Structure.allStructure();\r\n    for (var x = 0; x < variables.length; x++) {\r\n      if (variables[x][3] == \"global\")\r\n        defvars[x] =\r\n          variables[x][0] +\r\n          variables[x][1] +\r\n          \" \" +\r\n          Blockly.cpp.variableDB_.getName(\r\n            variables[x][2],\r\n            Blockly.Variables.NAME_TYPE\r\n          ) +\r\n          \";\";\r\n    }\r\n    Blockly.cpp.definitions_[\"variables\"] = defvars.join(\"\\n\");\r\n  }\r\n  Blockly.cpp.isInitialized = true;\r\n  console.log(workspace.getVariableMap());\r\n};\r\n\r\nBlockly.cpp.finish = function (code) {\r\n  // Indent every line.\r\n  if (code) {\r\n    code = this.prefixLines(code, Blockly.cpp.INDENT);\r\n  }\r\n  code = \"\\n\" + code;\r\n\r\n  // Convert the definitions dictionary into a list.\r\n  var includes = [];\r\n  var declarations = [];\r\n  var defines = [];\r\n  var func_definitions = [];\r\n  for (var name in Blockly.cpp.definitions_) {\r\n    var def = Blockly.cpp.definitions_[name];\r\n    var nameInclude = \"include\";\r\n    var nameFunc_declare = \"Func_declare\";\r\n    var nameDefine = \"define\";\r\n    if (name.match(nameInclude)) {\r\n      includes.push(def);\r\n    } else if (name.match(nameFunc_declare)) {\r\n      declarations.push(def); //declaration\r\n    } else if (name.match(nameDefine)) {\r\n      defines.push(def); //#define\r\n    } else {\r\n      func_definitions.push(def); //definition\r\n    }\r\n  }\r\n  //imports--> #include\r\n  //definitions--> function def, #def\r\n  var allDefs =\r\n    includes.join(\"\\n\") +\r\n    \"\\n\\n\" +\r\n    declarations.join(\"\\n\") +\r\n    \"\\n\\n\" +\r\n    defines.join(\"\\n\");\r\n  var allFuncs = func_definitions.join(\"\\n\");\r\n  var algorithmDefStart = `#ifdef ALGO_${Blockly.cpp.algorithm_.toUpperCase()}`;\r\n  var algorithmDefEnd = `#endif`;\r\n  let algorithm = `\r\n    ${algorithmDefStart}\\n\r\n    ${code}\\n\r\n    ${allFuncs.replace(/\\n\\n+/g, \"\\n\\n\")}\r\n    \\n\r\n    ${algorithmDefEnd}\r\n  `;\r\n  this.isInitialized = false;\r\n  this.nameDB_.reset();\r\n\r\n  return allDefs.replace(/\\n\\n+/g, \"\\n\\n\").replace(/\\n*$/, \"\\n\") + algorithm;\r\n};\r\n\r\nBlockly.cpp.finishFull = function (code) {\r\n  console.log(code);\r\n  // Convert the definitions dictionary into a list.\r\n  var definitions = [];\r\n  for (var name in Blockly.cpp.definitions_) {\r\n    definitions.push(Blockly.cpp.definitions_[name]);\r\n  }\r\n  code =\r\n    definitions.join(\"\\n\\n\") +\r\n    \"\\n\\n\" +\r\n    \"void setPos(float x, float y, float z) {\\n\\tfloat pos[3];\\n\\tpos[0] = x; pos[1] = y; pos[2] = z;\\n\\tapi.setPositionTarget(pos);\\n}\" +\r\n    \"\\n\\n\" +\r\n    code;\r\n  //HACK: Make sure the code contains an init function in case the init page has not been properly initialized\r\n  if (code.indexOf(\"//Begin page init\\nvoid init() {\\n\") === -1) {\r\n    code = \"void init() {}\\n\" + code;\r\n  }\r\n  return code;\r\n};\r\n\r\nBlockly.cpp.scrubNakedValue = function (line) {\r\n  return line + \";\\n\";\r\n  //ZR editor should ignore all blocks that are not children of the page's function block\r\n  // return '';\r\n};\r\n\r\nBlockly.cpp.quote_ = function (string) {\r\n  string = string\r\n    .replace(/\\\\/g, \"\\\\\\\\\")\r\n    .replace(/'/g, \"\\\\'\")\r\n    .replace(/\"/g, '\\\\\"')\r\n    .replace(/\\?/g, \"\\\\?\");\r\n  string = string.replace(/\\\\\\\\n/g, \"\\\\n\");\r\n  return string; //Do not add quotes so printf formatting can be used\r\n};\r\n\r\nBlockly.cpp.scrub_ = function (block, code) {\r\n  if (code === null) {\r\n    // Block has handled code generation itself.\r\n    return \"\";\r\n  }\r\n  var commentCode = \"\";\r\n  // Only collect comments for blocks that aren't inline.\r\n  if (!block.outputConnection || !block.outputConnection.targetConnection) {\r\n    // Collect comment for this block.\r\n    var comment = block.getCommentText();\r\n    if (comment) {\r\n      commentCode += this.prefixLines(comment, \"// \") + \"\\n\";\r\n    }\r\n    // Collect comments for all value arguments.\r\n    // Don't collect comments for nested statements.\r\n    for (var x = 0; x < block.inputList.length; x++) {\r\n      if (block.inputList[x].type == Blockly.INPUT_VALUE) {\r\n        var childBlock = block.inputList[x].connection.targetBlock();\r\n        if (childBlock) {\r\n          var comment = this.allNestedComments(childBlock);\r\n          if (comment) {\r\n            commentCode += this.prefixLines(comment, \"// \");\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  var nextBlock = block.nextConnection && block.nextConnection.targetBlock();\r\n  var nextCode = this.blockToCode(nextBlock);\r\n  return commentCode + code + nextCode;\r\n};\r\n\r\n// Constructor\r\nBlockly.cpp[\"constructor\"] = function (block) {\r\n  var branchParams = Blockly.cpp.statementToCode(block, \"PARAMS\");\r\n  var params = branchParams.split(\"$$\");\r\n  if (params.length > 2) {\r\n    for (var i = 0; i < params.length - 3; i++) {\r\n      params[i] = params[i] + \", \";\r\n    }\r\n    branchParams = params.join();\r\n  } else {\r\n    branchParams = params.join();\r\n  }\r\n  // removing the starting indentation and last comma\r\n  branchParams = branchParams.substring(2, branchParams.lastIndexOf(\",\"));\r\n\r\n  var code = \"$$CONSTRUCTOR_NAME$$(\" + branchParams + \") {}\\n\";\r\n  return code;\r\n};\r\n\r\n/**\r\n * Code generator stub for class-container block\r\n * @param block\r\n * @returns {string}\r\n */\r\nBlockly.cpp[\"class-container\"] = function (block) {\r\n  // Blockly.cpp.validator.init(block.workspace);\r\n  var text_class_name = block.getFieldValue(\"class_name\");\r\n  var statements_class_body = Blockly.cpp.statementToCode(block, \"class_body\");\r\n\r\n  var code =\r\n    \"#incluse mbed.h \\n\\nclass ahmed \" +\r\n    text_class_name +\r\n    \" {\\n\" +\r\n    statements_class_body +\r\n    \"}\";\r\n\r\n  var res = code.replace(\"$$CONSTRUCTOR_NAME$$\", text_class_name);\r\n\r\n  // Blockly.cpp.validator.refresh();\r\n  return res;\r\n};\r\n\r\n/**\r\n * Code generator stub for child-class-container block\r\n * @param block\r\n * @returns {string}\r\n */\r\nBlockly.cpp[\"child-class-container\"] = function (block) {\r\n  var text_class_name = block.getFieldValue(\"class_name\");\r\n  var statements_class_body = Blockly.cpp.statementToCode(block, \"class_body\");\r\n\r\n  var parentClassName = this.parentBlock_.getFieldValue(\"class_name\");\r\n  var code =\r\n    \"\\n\\nclass \" +\r\n    text_class_name +\r\n    \": \" +\r\n    parentClassName +\r\n    \" {\\n\" +\r\n    statements_class_body +\r\n    \"}\";\r\n  var res = code.replace(\"$$CONSTRUCTOR_NAME$$\", text_class_name);\r\n  return res;\r\n};\r\n\r\n/**\r\n * Code generator stub for variable-container\r\n * @param block\r\n * @returns {string}\r\n */\r\nBlockly.cpp[\"variable-container\"] = function (block) {\r\n  var dropdown_accessmodifire = block.getFieldValue(\"access-modifier\");\r\n  var statements_variables = Blockly.cpp.statementToCode(block, \"variables\");\r\n  var code = dropdown_accessmodifire + \":\\n\" + statements_variables;\r\n  return code;\r\n};\r\n\r\n/**\r\n * Code generator stub for method-container\r\n * @param block\r\n * @returns {string}\r\n */\r\nBlockly.cpp[\"method-container\"] = function (block) {\r\n  var dropdown_access_modifier = block.getFieldValue(\"access-modifier\");\r\n  var statements_inputs = Blockly.cpp.statementToCode(block, \"inputs\");\r\n  var code = dropdown_access_modifier + \":\\n\" + statements_inputs;\r\n\r\n  return code;\r\n};\r\n\r\n/**\r\n * Code generation stub for method block\r\n * @method block\r\n * @returns {string}\r\n */\r\nBlockly.cpp[\"method\"] = function (block) {\r\n  var returnType = block.getFieldValue(\"RETURN_TYPE\");\r\n  var methodName = block.getFieldValue(\"METHOD_NAME\");\r\n  var branch = Blockly.cpp.statementToCode(block, \"NAME\");\r\n  var params = branch.split(\"$$\");\r\n  if (params.length > 2) {\r\n    for (var i = 0; i < params.length - 3; i++) {\r\n      params[i] = params[i] + \", \";\r\n    }\r\n    branch = params.join();\r\n  } else {\r\n    branch = params.join();\r\n  }\r\n  // removing the starting indentation and last comma\r\n  branch = branch.substring(2, branch.lastIndexOf(\",\"));\r\n  var code = \"\";\r\n  code += returnType;\r\n  code += \" \" + methodName;\r\n  code += \"(\" + branch + \") {\";\r\n  code += returnType && returnType !== \"void\" ? \"\\n\\treturn -1;\\n\" : \"\";\r\n  code += \"}\\n\";\r\n  return code;\r\n};\r\n\r\nvar workspace;\r\nvar colors = [\"red\", \"green\", \"yellow\"];\r\n\r\n// Blockly.cpp.validator.init = function (pWorkspace) {\r\n//   if (!workspace) {\r\n//     workspace = pWorkspace;\r\n//   }\r\n// };\r\n\r\n// Blockly.cpp.validator.refresh = function () {\r\n//   var classes = workspace.getAllBlocks().filter(function (block) {\r\n//     return block.type == \"class-container\";\r\n//   });\r\n\r\n//   var classDropDowns = workspace.getAllBlocks().filter(function (block) {\r\n//     return block.type == \"class-instance-variable\";\r\n//   });\r\n//   var classNameList = [];\r\n//   for (var i in classes) {\r\n//     classNameList.push(classes[i].getFieldValue(\"class_name\"));\r\n//   }\r\n\r\n//   if (classDropDowns) {\r\n//     for (var z in classDropDowns) {\r\n//       classDropDowns[z].inputList[0].fieldRow[1].menuGenerator_ = [];\r\n//     }\r\n//     for (var i in classNameList) {\r\n//       for (var x in classDropDowns) {\r\n//         classDropDowns[x].inputList[0].fieldRow[1].menuGenerator_.push([\r\n//           classNameList[i],\r\n//           classNameList[i],\r\n//         ]);\r\n//       }\r\n//     }\r\n//   }\r\n// };\r\n\r\n/**\r\n * Code generation stub for variable block\r\n * @param block\r\n * @returns {string}\r\n */\r\nBlockly.cpp[\"variable\"] = function (block) {\r\n  var dropdown_variabletype = block.getFieldValue(\"variableType\");\r\n  var text_varname = block.getFieldValue(\"varName\");\r\n  var code = \"\\t\" + dropdown_variabletype + \" \" + text_varname + \"= 0;\\n\";\r\n  return code;\r\n};\r\n\r\n/**\r\n * Code generation stub for parameter block\r\n * @param block\r\n * @returns {string}\r\n */\r\nBlockly.cpp[\"parameter\"] = function (block) {\r\n  var text_parameter_name = block.getFieldValue(\"parameter-name\");\r\n  var dropdown_name = block.getFieldValue(\"NAME\");\r\n  var code = dropdown_name + \" \" + text_parameter_name + \"$$\"; //adding $$ to use it as a delimiter\r\n  return code;\r\n};\r\n/**\r\n * Code generation stub for object variable block\r\n * @param block\r\n * @returns {string}\r\n */\r\n\r\nBlockly.cpp[\"class-instance-variable\"] = function (block) {\r\n  var text_class_name = block.getFieldValue(\"class_name\");\r\n  var text_var_name = block.getFieldValue(\"variable_name\");\r\n  var code = text_class_name + \" \" + text_var_name + \";\\n\";\r\n  return code;\r\n};\r\n/**\r\n * Code generation stub for pointer variable block\r\n * @param block\r\n * @returns {string}\r\n */\r\n\r\nBlockly.cpp[\"object-pointer\"] = function (block) {\r\n  var text_pointer_name = block.getFieldValue(\"pointer_name\");\r\n  var class_name = block.getFieldValue(\"class_name\");\r\n  var code = class_name + \" \" + \"*\" + text_pointer_name + \";\\n\";\r\n  return code;\r\n};\r\n\r\nBlockly.cpp.validateWorkspace = (wp) => {\r\n  console.log(wp);\r\n};\r\n\r\nexport default Blockly.cpp;\r\n","import cppGenerator from './cpp';\r\n\r\ncppGenerator['controls_if'] = function(block) {\r\n    // If/elseif/else condition.\r\n    let n = 0;\r\n    let code = '', branchCode, conditionCode;\r\n    var value_name = cppGenerator.valueToCode(block, 'NAME', cppGenerator.ORDER_ATOMIC);\r\n    \r\n    if (cppGenerator.STATEMENT_PREFIX) {\r\n      // Automatic prefix insertion is switched off for this block.  Add manually.\r\n      code += cppGenerator.injectId(cppGenerator.STATEMENT_PREFIX, block);\r\n    }\r\n    do {\r\n      conditionCode =\r\n      cppGenerator.valueToCode(block, 'IF' + n, cppGenerator.ORDER_NONE) || 'false';\r\n      branchCode = cppGenerator.statementToCode(block, 'DO' + n);\r\n      if (cppGenerator.STATEMENT_SUFFIX) {\r\n        branchCode =\r\n            cppGenerator.prefixLines(\r\n                cppGenerator.injectId(cppGenerator.STATEMENT_SUFFIX, block), cppGenerator.INDENT) +\r\n            branchCode;\r\n      }\r\n      code += (n > 0 ? 'else ' : '') + 'if (' + conditionCode + ') {\\n' +\r\n          branchCode + '\\n}';\r\n      n++;\r\n    } while (block.getInput('IF' + n));\r\n  \r\n    if (block.getInput('ELSE') || cppGenerator.STATEMENT_SUFFIX) {\r\n      branchCode = cppGenerator.statementToCode(block, 'ELSE');\r\n      if (cppGenerator.STATEMENT_SUFFIX) {\r\n        branchCode =\r\n            cppGenerator.prefixLines(\r\n                cppGenerator.injectId(cppGenerator.STATEMENT_SUFFIX, block), cppGenerator.INDENT) +\r\n            branchCode;\r\n      }\r\n      code += ' else {\\n' + branchCode + '\\n}';\r\n    }\r\n    return code + '\\n';\r\n  };\r\n  \r\n  cppGenerator['logic_compare'] = function(block) {\r\n    // Comparison operator.\r\n    const OPERATORS =\r\n        {'EQ': '==', 'NEQ': '!=', 'LT': '<', 'LTE': '<=', 'GT': '>', 'GTE': '>='};\r\n    const operator = OPERATORS[block.getFieldValue('OP')];\r\n    const order = (operator === '==' || operator === '!=') ?\r\n        cppGenerator.ORDER_EQUALITY :\r\n        cppGenerator.ORDER_RELATIONAL;\r\n    const argument0 = cppGenerator.valueToCode(block, 'A', order) || '0';\r\n    const argument1 = cppGenerator.valueToCode(block, 'B', order) || '0';\r\n    const code = argument0 + ' ' + operator + ' ' + argument1;\r\n    return [code, order];\r\n  };\r\n  ","import cppGenerator from \"./cpp\";\r\n\r\ncppGenerator[\"math_number\"] = function (block) {\r\n  // Numeric value.\r\n  const code = Number(block.getFieldValue(\"NUM\"));\r\n  const order =\r\n    code >= 0 ? cppGenerator.ORDER_ATOMIC : cppGenerator.ORDER_UNARY_NEGATION;\r\n  return [code, order];\r\n};\r\n","import cppGenerator from \"./cpp\";\r\nimport { Names } from \"blockly/core\";\r\n\r\ncppGenerator[\"variables_get\"] = function (block) {\r\n  // Variable getter.\r\n  const code = cppGenerator.nameDB_.getName(\r\n    block.getFieldValue(\"VAR\"),\r\n    Names.NameType.VARIABLE\r\n  );\r\n  return [code, cppGenerator.ORDER_ATOMIC];\r\n};\r\n\r\ncppGenerator[\"variables_set\"] = function (block) {\r\n  // Variable setter.\r\n  const argument0 =\r\n    cppGenerator.valueToCode(block, \"VALUE\", cppGenerator.ORDER_ASSIGNMENT) ||\r\n    \"0\";\r\n  const varName = cppGenerator.nameDB_.getName(\r\n    block.getFieldValue(\"VAR\"),\r\n    Names.NameType.VARIABLE\r\n  );\r\n  return varName + \" = \" + argument0 + \";\\n\";\r\n};\r\n","import cppGenerator from \"./cpp\";\r\nimport { Names } from \"blockly/core\";\r\nimport Blockly from 'blockly'\r\n\r\ncppGenerator[\"procedures_defreturn\"] = function (block) {\r\n  // Define a procedure with a return value.\r\n  const funcName = cppGenerator.nameDB_.getName(\r\n    block.getFieldValue(\"NAME\"),\r\n    Names.NameType.PROCEDURE\r\n  );\r\n  let xfix1 = \"\";\r\n  if (cppGenerator.STATEMENT_PREFIX) {\r\n    xfix1 += cppGenerator.injectId(cppGenerator.STATEMENT_PREFIX, block);\r\n  }\r\n  if (cppGenerator.STATEMENT_SUFFIX) {\r\n    xfix1 += cppGenerator.injectId(cppGenerator.STATEMENT_SUFFIX, block);\r\n  }\r\n  if (xfix1) {\r\n    xfix1 = cppGenerator.prefixLines(xfix1, cppGenerator.INDENT);\r\n  }\r\n  let loopTrap = \"\";\r\n  if (cppGenerator.INFINITE_LOOP_TRAP) {\r\n    loopTrap = cppGenerator.prefixLines(\r\n      cppGenerator.injectId(cppGenerator.INFINITE_LOOP_TRAP, block),\r\n      cppGenerator.INDENT\r\n    );\r\n  }\r\n  const branch = cppGenerator.statementToCode(block, \"STACK\");\r\n  let returnValue =\r\n    cppGenerator.valueToCode(block, \"RETURN\", cppGenerator.ORDER_NONE) || \"\";\r\n  let xfix2 = \"\";\r\n  if (branch && returnValue) {\r\n    // After executing the function body, revisit this block for the return.\r\n    xfix2 = xfix1;\r\n  }\r\n  if (returnValue) {\r\n    returnValue = cppGenerator.INDENT + \"return \" + returnValue + \";\\n\";\r\n  }\r\n  const returnType = returnValue ? \"dynamic\" : \"void\";\r\n  const args = [];\r\n  const variables = block.getVars();\r\n  for (let i = 0; i < variables.length; i++) {\r\n    args[i] = cppGenerator.nameDB_.getName(\r\n      variables[i],\r\n      Names.NameType.VARIABLE\r\n    );\r\n  }\r\n  let code =\r\n    returnType +\r\n    \" \" +\r\n    funcName +\r\n    \"(\" +\r\n    args.join(\", \") +\r\n    \") {\\n\" +\r\n    xfix1 +\r\n    loopTrap +\r\n    branch +\r\n    xfix2 +\r\n    returnValue +\r\n    \"}\";\r\n  code = cppGenerator.scrub_(block, code);\r\n  // Add % so as not to collide with helper functions in definitions list.\r\n  cppGenerator.definitions_[\"%\" + funcName] = code;\r\n  return null;\r\n};\r\n\r\n// Defining a procedure without a return value uses the same generator as\r\n// a procedure with a return value.\r\ncppGenerator[\"procedures_defnoreturn\"] = cppGenerator[\"procedures_defreturn\"];\r\n\r\ncppGenerator[\"procedures_callreturn\"] = function (block) {\r\n  // Call a procedure with a return value.\r\n  const funcName = cppGenerator.nameDB_.getName(\r\n    block.getFieldValue(\"NAME\"),\r\n    Names.NameType.PROCEDURE\r\n  );\r\n  const args = [];\r\n  const variables = block.getVars();\r\n  for (let i = 0; i < variables.length; i++) {\r\n    args[i] =\r\n      cppGenerator.valueToCode(block, \"ARG\" + i, cppGenerator.ORDER_NONE) ||\r\n      \"null\";\r\n  }\r\n  let code = funcName + \"(\" + args.join(\", \") + \")\";\r\n  return [code, cppGenerator.ORDER_UNARY_POSTFIX];\r\n};\r\n\r\ncppGenerator[\"procedures_callnoreturn\"] = function (block) {\r\n  // Call a procedure with no return value.\r\n  // Generated code is for a function call as a statement is the same as a\r\n  // function call as a value, with the addition of line ending.\r\n  const tuple = cppGenerator[\"procedures_callreturn\"](block);\r\n  return tuple[0] + \";\\n\";\r\n};\r\n\r\ncppGenerator[\"algorithm_interrupt\"] = function (block) {\r\n  var variable_interrupt_variable = cppGenerator.nameDB_.getName(\r\n    block.getFieldValue(\"interrupt_variable\"),\r\n    Blockly.Variables.NAME_TYPE\r\n  );\r\n  var variable_msg_variable = cppGenerator.nameDB_.getName(\r\n    block.getFieldValue(\"msg_variable\"),\r\n    Blockly.Variables.NAME_TYPE\r\n  );\r\n  var statements_interrupt_body = cppGenerator.statementToCode(\r\n    block,\r\n    \"interrupt_body\"\r\n  );\r\n  var code = `void algorithm_interrupt(robot_interrupt_t ${variable_interrupt_variable}, char* ${variable_msg_variable}) {\r\n    \\t${statements_interrupt_body}\r\n  }`;\r\n  return code;\r\n};\r\n","import Blockly from \"blockly\";\r\nimport { Names } from \"blockly/core\";\r\nimport cppGenerator from \"../generator/cpp\";\r\nconst NameType = Names.NameType;\r\n\r\nBlockly.Blocks[\"delay\"] = {\r\n  init: function () {\r\n    this.appendDummyInput()\r\n      .appendField(\"Delay\")\r\n      .appendField(new Blockly.FieldNumber(0, 0), \"delay_s\");\r\n    this.setInputsInline(false);\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(120);\r\n    this.setTooltip(\"Waits for number of seconds\");\r\n    this.setHelpUrl(\"\");\r\n  },\r\n};\r\n\r\n\r\nBlockly.Blocks[\"serial_print\"] = {\r\n  init: function () {\r\n    this.appendDummyInput()\r\n      .appendField(\"Serial Print\")\r\n      .appendField(new Blockly.FieldTextInput(\"msg\"), \"msg\");\r\n    this.setInputsInline(false);\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(20);\r\n    this.setTooltip(\"Serial print\");\r\n    this.setHelpUrl(\"\");\r\n  },\r\n};\r\n\r\nBlockly.Blocks[\"drive_motors\"] = {\r\n  init: function () {\r\n    this.appendDummyInput().appendField(\"Drive Motor\");\r\n    this.appendDummyInput()\r\n      .appendField(\"left-motor-speed\")\r\n      .appendField(new Blockly.FieldNumber(0, 0, 255), \"left-motor-speed\");\r\n    this.appendDummyInput()\r\n      .appendField(\"right-motor-speed\")\r\n      .appendField(new Blockly.FieldNumber(0), \"right-motor-speed\");\r\n    this.setInputsInline(false);\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(230);\r\n    this.setTooltip(\"Activate motor\");\r\n    this.setHelpUrl(\"\");\r\n  },\r\n};\r\n\r\nBlockly.Blocks[\"algorithm\"] = {\r\n  init: function () {\r\n    this.appendDummyInput().appendField(\r\n      new Blockly.FieldTextInput(\"Algorithm\"),\r\n      \"algorithm_name\"\r\n    );\r\n    this.appendDummyInput()\r\n      .appendField(\r\n        new Blockly.FieldVariable(\"ROBOT_STATE\"),\r\n        \"robot_state_label\"\r\n      )\r\n      .appendField(new Blockly.FieldNumber(0, 0, 10), \"robot_state_value\");\r\n    this.appendStatementInput(\"algo_body\")\r\n      .setCheck(null)\r\n      .appendField(\"algorithm_loop\");\r\n    // this.appendStatementInput(\"loop\").setCheck(null).appendField(\"Loop\");\r\n    // this.appendStatementInput(\"interrupt\")\r\n    //   .setCheck(null)\r\n    //   .appendField(\"Interrupt\");\r\n    // this.appendStatementInput(\"start\").setCheck(null).appendField(\"Start\");\r\n    // this.appendStatementInput(\"reset\").setCheck(null).appendField(\"Reset\");\r\n    // this.appendStatementInput(\"stop\"delay).setCheck(null).appendField(\"Stop\");\r\n    this.setColour(230);\r\n    this.setTooltip(\"\");\r\n    this.setHelpUrl(\"\");\r\n  },\r\n};\r\n\r\ncppGenerator[\"serial_print\"] = function (block) {\r\n  var text_msg = block.getFieldValue(\"msg\");\r\n  var code = `Serial.println(\"${text_msg}\");\\n`;\r\n  return code;\r\n};\r\n\r\ncppGenerator[\"delay\"] = function (block) {\r\n  var number_delay_s = block.getFieldValue(\"delay_s\");\r\n  var code = `delay(${number_delay_s});\\n`;\r\n  return code;\r\n};\r\n\r\ncppGenerator[\"algorithm\"] = function (block) {\r\n  console.log(cppGenerator.nameDB_, NameType.VARIABLE);\r\n  cppGenerator.definitions_[`include#algorithm`] = `#include \"algorithm.h\"`;\r\n  var variable_name = cppGenerator.nameDB_.getName(\r\n    block.getFieldValue(\"algorithm_name\"),\r\n    NameType.VARIABLE\r\n  );\r\n  cppGenerator.algorithm_ = variable_name;\r\n  var variable_robot_state_label = cppGenerator.nameDB_.getName(\r\n    block.getFieldValue(\"robot_state_label\"),\r\n    NameType.VARIABLE\r\n  );\r\n  console.log(variable_robot_state_label);\r\n  var number_robot_state_value = block.getFieldValue(\"robot_state_value\");\r\n\r\n  var body = cppGenerator.statementToCode(block, \"algo_body\");\r\n  // var statements_loop = cppGenerator.statementToCode(block, \"loop\");\r\n  // var statements_interrupt = cppGenerator.statementToCode(block, \"interrupt\");\r\n  // var statements_start = cppGenerator.statementToCode(block, \"start\");\r\n  // var statements_stop = cppGenerator.statementToCode(block, \"stop\");\r\n  // var statements_reset = cppGenerator.statementToCode(block, \"reset\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = `\r\n    int ${variable_robot_state_label} = ${number_robot_state_value};\r\n\r\n    void algorithm_loop() {\r\n      \\t${body}\r\n    }\r\n\r\n  `;\r\n  return code;\r\n};\r\n\r\nBlockly.Blocks[\"variable\"] = {\r\n  init: function () {\r\n    this.appendDummyInput()\r\n      .appendField(new Blockly.FieldTextInput(\"myVariable\"), \"varName\")\r\n      .appendField(\"variable of type\")\r\n      .appendField(\r\n        new Blockly.FieldDropdown([\r\n          [\"int\", \"int\"],\r\n          [\"flot\", \"flot\"],\r\n          [\"double\", \"double\"],\r\n        ]),\r\n        \"variableType\"\r\n      )\r\n      .appendField(\"initialized to\");\r\n    this.appendValueInput(\"initValue\").setCheck(\"Number\");\r\n    this.setInputsInline(true);\r\n    this.setPreviousStatement(true, [\r\n      \"variable\",\r\n      \"class-instance-variable\",\r\n      \"object-pointer\",\r\n    ]);\r\n    this.setNextStatement(true, [\r\n      \"variable\",\r\n      \"class-instance-variable\",\r\n      \"object-pointer\",\r\n    ]);\r\n    this.setColour(290);\r\n    this.setTooltip(\"tooltip\");\r\n    this.setHelpUrl(\"https://github.com/dineshLL/lisa/wiki\");\r\n  },\r\n};\r\n\r\n/**\r\n * Parameter block definition\r\n * @type {{init: Blockly.Blocks.parameter.init}}\r\n */\r\nBlockly.Blocks[\"parameter\"] = {\r\n  init: function () {\r\n    this.appendDummyInput()\r\n      .appendField(\r\n        new Blockly.FieldDropdown([\r\n          [\"int\", \"int\"],\r\n          [\"float\", \"float\"],\r\n          [\"double\", \"double\"],\r\n          [\"char\", \"char\"],\r\n          [\"char[]\", \"char[]\"],\r\n          [\"real\", \"real\"],\r\n        ]),\r\n        \"NAME\"\r\n      )\r\n      .appendField(\"parameter as\")\r\n      .appendField(\r\n        new Blockly.FieldTextInput(\"parameter-name\"),\r\n        \"parameter-name\"\r\n      );\r\n    this.setPreviousStatement(true, \"parameter\");\r\n    this.setNextStatement(true, \"parameter\");\r\n    this.setColour(230);\r\n    this.setTooltip(\"Passed param\");\r\n  },\r\n};\r\n\r\nBlockly.Blocks[\"boolean_input\"] = {\r\n  init: function () {\r\n    this.appendDummyInput().appendField(\r\n      new Blockly.FieldTextInput(\"default\"),\r\n      \"NAME\"\r\n    );\r\n    this.setOutput(true, \"Number\");\r\n    this.setColour(120);\r\n    this.setTooltip(\"\");\r\n    this.setHelpUrl(\"https://github.com/dineshLL/lisa/wiki\");\r\n  },\r\n};\r\n\r\nBlockly.Blocks[\"boolean_input\"] = {\r\n  init: function () {\r\n    this.appendDummyInput().appendField(\r\n      new Blockly.FieldTextInput(\"default\"),\r\n      \"NAME\"\r\n    );\r\n    this.setOutput(true, \"Number\");\r\n    this.setColour(120);\r\n    this.setTooltip(\"\");\r\n    this.setHelpUrl(\"http://www.example.com/\");\r\n  },\r\n};\r\n\r\n/**\r\n * Object variable block definition\r\n * @type {{init: Blockly.Blocks.objectVariable.init}}\r\n */\r\n\r\nBlockly.Blocks[\"class-instance-variable\"] = {\r\n  init: function () {\r\n    this.appendDummyInput()\r\n      .appendField(\"instance of\")\r\n      .appendField(new Blockly.FieldDropdown([[\"\", \"\"]]), \"class_name\")\r\n      .appendField(\"as\")\r\n      .appendField(new Blockly.FieldTextInput(\"variable\"), \"variable_name\");\r\n    this.setPreviousStatement(true, [\r\n      \"class-instance-variable\",\r\n      \"object-pointer\",\r\n      \"variable\",\r\n    ]);\r\n    this.setNextStatement(true, [\r\n      \"class-instance-variable\",\r\n      \"object-pointer\",\r\n      \"variable\",\r\n    ]);\r\n    this.setColour(260);\r\n    this.setTooltip(\"\");\r\n  },\r\n};\r\n\r\n/**\r\n * Pointer  block definition\r\n * @type {{init: Blockly.Blocks.objectVariable.init}}\r\n */\r\n\r\nBlockly.Blocks[\"object-pointer\"] = {\r\n  init: function () {\r\n    this.appendDummyInput()\r\n      .appendField(new Blockly.FieldTextInput(\"myVariable\"), \"pointer_name\")\r\n      .appendField(\"pointer of object\")\r\n      .appendField(new Blockly.FieldTextInput(\"className\"), \"class_name\");\r\n    this.setPreviousStatement(true, [\r\n      \"object-pointer\",\r\n      \"class-instance-variable\",\r\n      \"variable\",\r\n    ]);\r\n    this.setNextStatement(true, [\r\n      \"object-pointer\",\r\n      \"class-instance-variable\",\r\n      \"variable\",\r\n    ]);\r\n    this.setColour(20);\r\n    this.setTooltip(\"\");\r\n  },\r\n};\r\n\r\nBlockly.Blocks[\"variables_init\"] = {\r\n  init: function () {\r\n    this.appendDummyInput()\r\n      .appendField(\r\n        new Blockly.FieldLabelSerializable(\"Initialize variable\"),\r\n        \"dtext1\"\r\n      )\r\n      .appendField(new Blockly.FieldVariable(\"item\"), \"var_name\")\r\n      .appendField(\"of type\")\r\n      .appendField(\r\n        new Blockly.FieldDropdown([\r\n          [\"int\", \"int\"],\r\n          [\"float\", \"float\"],\r\n          [\"double\", \"double\"],\r\n        ]),\r\n        \"var_type\"\r\n      );\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(330);\r\n    this.setTooltip(\"\");\r\n    this.setHelpUrl(\"\");\r\n  },\r\n};\r\n\r\ncppGenerator[\"variables_init\"] = function (block) {\r\n  var variable_var_name = cppGenerator.nameDB_.getName(\r\n    block.getFieldValue(\"var_name\"),\r\n    NameType.VARIABLE\r\n  );\r\n  var dropdown_var_type = block.getFieldValue(\"var_type\");\r\n  var initialValue;\r\n  switch (dropdown_var_type) {\r\n    case \"int\":\r\n      initialValue = 0;\r\n      break;\r\n    case \"double\":\r\n      initialValue = 0;\r\n      break;\r\n    case \"float\":\r\n      initialValue = 0;\r\n      break;\r\n    case \"string\":\r\n      initialValue = \"\";\r\n      break;\r\n    default:\r\n      initialValue = null;\r\n      break;\r\n  }\r\n  var code = `${dropdown_var_type} ${variable_var_name} ${\r\n    initialValue !== null ? ` = ${initialValue};` : \";\"\r\n  }\\n`;\r\n  return code;\r\n};\r\n\r\nBlockly.Blocks[\"neo_color_wave\"] = {\r\n  init: function () {\r\n    this.appendDummyInput()\r\n      .appendField(\r\n        new Blockly.FieldLabelSerializable(\"NeoPixel colorwave\"),\r\n        \"dtext1\"\r\n      )\r\n      .appendField(\r\n        new Blockly.FieldDropdown([\r\n          [\"Red\", \"100, 0, 0\"],\r\n          [\"Green\", \"0, 100, 0\"],\r\n          [\"White\", \"100, 100, 100\"],\r\n          [\"Yellow\", \"100, 100, 0\"],\r\n        ]),\r\n        \"color_input\"\r\n      );\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(15);\r\n    this.setTooltip(\"\");\r\n    this.setHelpUrl(\"\");\r\n  },\r\n};\r\n\r\ncppGenerator[\"neo_color_wave\"] = function (block) {\r\n  cppGenerator.definitions_[\r\n    `include#neo_color_wave`\r\n  ] = `#include \"modules/neopixel/neopixel.h\"`;\r\n  var dropdown_color_input = block.getFieldValue(\"color_input\");\r\n  var neopixelDefStart = `#ifdef NEOPIXEL_INDICATIONS`;\r\n  var neopixelDefEnd = `#endif\\n`;\r\n  var code = `\r\n    ${neopixelDefStart}\r\n    \\tpixelColorWave(${dropdown_color_input});\r\n    ${neopixelDefEnd}\r\n  `;\r\n  return code;\r\n};\r\n\r\nBlockly.Blocks[\"algorithm_interrupt\"] = {\r\n  init: function () {\r\n    this.appendDummyInput().appendField(\"algorithm_interrupt\");\r\n    this.appendDummyInput()\r\n      .setAlign(Blockly.ALIGN_RIGHT)\r\n      .appendField(\"robot_interrupt_t\")\r\n      .appendField(new Blockly.FieldVariable(\"robot_interrupt\"), \"interrupt_variable\")\r\n      .appendField(\",\")\r\n      .appendField(\"char *\")\r\n      .appendField(new Blockly.FieldVariable(\"msg\"), \"msg_variable\");\r\n    this.appendStatementInput(\"interrupt_body\").setCheck(null);\r\n    this.setColour(290);\r\n    this.setTooltip(\"\");\r\n    this.setHelpUrl(\"\");\r\n  },\r\n};\r\n\r\nBlockly.Blocks[\"check_mqtt_messages\"] = {\r\n  init: function () {\r\n    this.appendDummyInput()\r\n      .appendField(\"Check new mqtt messages in\")\r\n      .appendField(new Blockly.FieldNumber(0, 0), \"delay_s\");\r\n    this.setInputsInline(false);\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(65);\r\n    this.setTooltip(\"Waits for number of seconds\");\r\n    this.setHelpUrl(\"\");\r\n  },\r\n};\r\n\r\nBlockly.Blocks['publish'] = {\r\n  init: function() {\r\n    this.appendDummyInput()\r\n        .appendField(\"Publish\");\r\n    this.appendStatementInput(\"Topic\")\r\n        .setCheck(null);\r\n    this.setColour(65);\r\n this.setTooltip(\"\");\r\n this.setHelpUrl(\"\");\r\n  }\r\n};\r\n\r\nBlockly.Blocks['subscribe'] = {\r\n  init: function() {\r\n    this.appendDummyInput()\r\n        .appendField(\"Subscribe\");\r\n    this.appendStatementInput(\"Topic\")\r\n        .setCheck(null);\r\n    this.setColour(65);\r\n this.setTooltip(\"\");\r\n this.setHelpUrl(\"\");\r\n  }\r\n};\r\n\r\nBlockly.Blocks['publish_with_content'] = {\r\n  init: function() {\r\n    this.appendDummyInput()\r\n        .appendField(\"Publish To Topic\");\r\n    this.appendValueInput(\"Topic\")\r\n        .setCheck(null)\r\n        .setAlign(Blockly.ALIGN_RIGHT);\r\n    this.appendDummyInput()\r\n        .appendField(\"With Content\");\r\n    this.appendValueInput(\"Message\")\r\n        .setCheck(null);\r\n    this.setInputsInline(true);\r\n    this.setColour(65);\r\n this.setTooltip(\"\");\r\n this.setHelpUrl(\"\");\r\n  }\r\n};\r\n\r\nBlockly.Blocks['chip_id'] = {\r\n  init: function() {\r\n    this.appendDummyInput()\r\n        .appendField(\"Chip ID\");\r\n    this.setOutput(true, null);\r\n    this.setColour(260);\r\n this.setTooltip(\"\");\r\n this.setHelpUrl(\"\");\r\n  }\r\n};\r\n\r\ncppGenerator[\"chip_id\"] = function () {\r\n  return \"(int)(ESP.getEfuseMac() & 0xffffffff)\";\r\n};","import React from \"react\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setAlgorithmName, setGeneratedCppCode, setGeneratedXmlCode } from \"../../Redux/FirmwareFile\";\r\nimport { increase } from \"../../Redux/CodeGenSteps\";\r\nimport { StepForwardOutlined } from '@ant-design/icons'\r\n\r\nimport Blockly from \"blockly/core\";\r\nimport locale from \"blockly/msg/en\";\r\nimport \"./generator/all\";\r\nimport \"./custom-blocks\";\r\nimport cppGen from \"./generator/cpp\";\r\nimport { Button } from \"antd\";\r\n\r\nBlockly.setLocale(locale);\r\n\r\nfunction BlocklyComponent(props) {\r\n  const blocklyDiv = useRef();\r\n  const toolbox = useRef();\r\n  let primaryWorkspace = useRef();\r\n\r\n  // redux related variables\r\n  const dispatch = useDispatch()\r\n\r\n  const handleNext = () => {\r\n    generateCode()\r\n    generateXML()\r\n    dispatch(increase())\r\n  }\r\n\r\n  const generateCode = () => {\r\n    cppGen.init(primaryWorkspace.current);\r\n    var code = cppGen.workspaceToCode(primaryWorkspace.current);\r\n    const algorithmName = cppGen.algorithm_\r\n    dispatch(setAlgorithmName(algorithmName)) // set algorithm name in redux state\r\n    dispatch(setGeneratedCppCode(code)) // set generated cpp code in redux state\r\n    console.log(code);\r\n  };\r\n\r\n  const generateXML = () => {\r\n    var xmlDom = Blockly.Xml.workspaceToDom(primaryWorkspace.current);\r\n    var xmlText = Blockly.Xml.domToPrettyText(xmlDom);\r\n    dispatch(setGeneratedXmlCode(xmlText)) // set generated xml code in redux state\r\n    console.log(xmlText);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { initialXml, children, ...rest } = props;\r\n    primaryWorkspace.current = Blockly.inject(blocklyDiv.current, {\r\n      toolbox: toolbox.current,\r\n      ...rest,\r\n    });\r\n\r\n    if (initialXml) {\r\n      Blockly.Xml.domToWorkspace(\r\n        Blockly.Xml.textToDom(initialXml),\r\n        primaryWorkspace.current\r\n      );\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.initialXml]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button type=\"primary\" onClick={() => handleNext()}>\r\n        <div className='d-flex'>\r\n            <div>Next</div>\r\n            <div style={{marginTop: '-3px', marginRight: '3px'}}><StepForwardOutlined /></div>\r\n        </div>\r\n      </Button>\r\n      <div ref={blocklyDiv} id=\"blocklyDiv\" />\r\n      <div style={{ display: \"none\" }} ref={toolbox}>\r\n        {props.children}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default BlocklyComponent;\r\n","/**\r\n * @license\r\n * \r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @fileoverview XML wrappers for block, category, value, field and shadow.\r\n * @author samelh@google.com (Sam El-Husseini)\r\n */\r\n\r\n import React from 'react';\r\nimport BlocklyComponent from './BlocklyComponent';\r\n\r\nexport default BlocklyComponent;\r\n\r\nconst Block = (p) => {\r\n    const { children, ...props } = p;\r\n    props.is = \"blockly\";\r\n    return React.createElement(\"block\", props, children);\r\n};\r\n\r\nconst Category = (p) => {\r\n    const { children, ...props } = p;\r\n    props.is = \"blockly\";\r\n    return React.createElement(\"category\", props, children);\r\n};\r\n\r\nconst Value = (p) => {\r\n    const { children, ...props } = p;\r\n    props.is = \"blockly\";\r\n    return React.createElement(\"value\", props, children);\r\n};\r\n\r\nconst Field = (p) => {\r\n    const { children, ...props } = p;\r\n    props.is = \"blockly\";\r\n    return React.createElement(\"field\", props, children);\r\n};\r\n\r\nconst Shadow = (p) => {\r\n    const { children, ...props } = p;\r\n    props.is = \"blockly\";\r\n    return React.createElement(\"shadow\", props, children);\r\n};\r\n\r\nexport { Block, Category, Value, Field, Shadow }","import React from \"react\";\r\n// import BlocklyPlayground from \"../../components/BlocklyPlayground/BlocklyPlayground\";\r\nimport BlocklyComponent, {\r\n  Block,\r\n  Value,\r\n  Field,\r\n  Shadow,\r\n  Category,\r\n} from \"../../components/BlocklyComponent\";\r\nimport * as libraryBlocks from \"blockly/blocks\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Playground() {\r\n  const { generatedXmlCode } = useSelector((state) => state.firmware);\r\n  const initialXml = `<xml xmlns=\"https://developers.google.com/blockly/xml\">\r\n  <variables>\r\n    <variable id=\"s]bRmbZ++\\`1c?{z!/d_:\">ROBOT_STATE</variable>\r\n    <variable id=\"x$leYs{fIiSO1QApRb*c\">interrupt</variable>\r\n    <variable id=\"C}k8;%~r]6mMiJiCA2b%\">msg</variable>\r\n  </variables>\r\n  <block type=\"procedures_defnoreturn\" id=\"zfserX5aCGAE:_V]Uq8|\" x=\"316\" y=\"31\">\r\n    <field name=\"NAME\">algorithm_setup</field>\r\n    <comment pinned=\"false\" h=\"80\" w=\"160\">Describe this function...</comment>\r\n    <statement name=\"STACK\">\r\n      <block type=\"serial_print\" id=\"[VfaL~(d|rSee|Gn]GkT\">\r\n        <field name=\"msg\">algorithm: setup</field>\r\n      </block>\r\n    </statement>\r\n  </block>\r\n  <block type=\"procedures_defnoreturn\" id=\"l@{)$#Rw]5D!F@:nM64T\" x=\"584\" y=\"29\">\r\n    <field name=\"NAME\">algorithm_start</field>\r\n    <comment pinned=\"false\" h=\"80\" w=\"160\">Describe this function...</comment>\r\n    <statement name=\"STACK\">\r\n      <block type=\"serial_print\" id=\"qxwMH}D}#fBe6b.5!0^5\">\r\n        <field name=\"msg\">algorithm: start</field>\r\n        <next>\r\n          <block type=\"variables_set\" id=\"u6E\\`0xQiSuF[:wi;\\`F5s\">\r\n            <field name=\"VAR\" id=\"s]bRmbZ++\\`1c?{z!/d_:\">ROBOT_STATE</field>\r\n            <value name=\"VALUE\">\r\n              <block type=\"math_number\" id=\"aZ\\`b6~1n,]3)]fxcu5J,\">\r\n                <field name=\"NUM\">0</field>\r\n              </block>\r\n            </value>\r\n          </block>\r\n        </next>\r\n      </block>\r\n    </statement>\r\n  </block>\r\n  <block type=\"procedures_defnoreturn\" id=\"J{]83tn3#1E%7y-2^mW}\" x=\"864\" y=\"23\">\r\n    <field name=\"NAME\">algorithm_stop</field>\r\n    <comment pinned=\"false\" h=\"80\" w=\"160\">Describe this function...</comment>\r\n    <statement name=\"STACK\">\r\n      <block type=\"serial_print\" id=\"t24Ia}-aa$4Dvi]vPX%_\">\r\n        <field name=\"msg\">algorithm: stop</field>\r\n        <next>\r\n          <block type=\"variables_set\" id=\",6bJB[!f^qD*._e)z:=k\">\r\n            <field name=\"VAR\" id=\"s]bRmbZ++\\`1c?{z!/d_:\">ROBOT_STATE</field>\r\n            <value name=\"VALUE\">\r\n              <block type=\"math_number\" id=\"fCq9A;lkam9R)LoeUaTL\">\r\n                <field name=\"NUM\">10</field>\r\n              </block>\r\n            </value>\r\n          </block>\r\n        </next>\r\n      </block>\r\n    </statement>\r\n  </block>\r\n  <block type=\"procedures_defnoreturn\" id=\"zcJoyX5aCGZE:_V]Uq8|\" x=\"588\" y=\"145\">\r\n    <field name=\"NAME\">algorithm_reset</field>\r\n    <comment pinned=\"false\" h=\"80\" w=\"160\">Describe this function...</comment>\r\n    <statement name=\"STACK\">\r\n      <block type=\"serial_print\" id=\",%$n;2VU[ule:XXG7)mS\">\r\n        <field name=\"msg\">algorithm: reset</field>\r\n        <next>\r\n          <block type=\"variables_set\" id=\"EUA8MNCiL}n(HqC\\`.tSr\">\r\n            <field name=\"VAR\" id=\"s]bRmbZ++\\`1c?{z!/d_:\">ROBOT_STATE</field>\r\n            <value name=\"VALUE\">\r\n              <block type=\"math_number\" id=\"9ro+5R+*Yj|:_zKcr*;-\">\r\n                <field name=\"NUM\">1</field>\r\n              </block>\r\n            </value>\r\n          </block>\r\n        </next>\r\n      </block>\r\n    </statement>\r\n  </block>\r\n  <block type=\"procedures_defnoreturn\" id=\"Qx\\`{\\`{8nF9#J$qJ)8)lB\" x=\"873\" y=\"146\">\r\n    <field name=\"NAME\">algorithm_execute</field>\r\n    <comment pinned=\"false\" h=\"80\" w=\"160\">Describe this function...</comment>\r\n    <statement name=\"STACK\">\r\n      <block type=\"serial_print\" id=\"|;wv;a=c3;h\\`A.b3-4E/\">\r\n        <field name=\"msg\">algorithm: execute</field>\r\n        <next>\r\n          <block type=\"neo_color_wave\" id=\"RDfH\\`t18+MlEFez0dulF\">\r\n            <field name=\"dtext1\">NeoPixel colorwave</field>\r\n            <field name=\"color_input\">100, 0, 0</field>\r\n            <next>\r\n              <block type=\"delay\" id=\"@x#{ZyF|tt$te.tQ\\`:Sc\">\r\n                <field name=\"delay_s\">1000</field>\r\n                <next>\r\n                  <block type=\"neo_color_wave\" id=\"|EzJ?yXA(fB[7[7hOOnW\">\r\n                    <field name=\"dtext1\">NeoPixel colorwave</field>\r\n                    <field name=\"color_input\">0, 100, 0</field>\r\n                    <next>\r\n                      <block type=\"delay\" id=\"\\`LN6VdukES!R{lCPw;jr\">\r\n                        <field name=\"delay_s\">1000</field>\r\n                        <next>\r\n                          <block type=\"neo_color_wave\" id=\"TD/QUmbC5]_](A+90zlv\">\r\n                            <field name=\"dtext1\">NeoPixel colorwave</field>\r\n                            <field name=\"color_input\">100, 100, 100</field>\r\n                            <next>\r\n                              <block type=\"delay\" id=\"DB*s$Ta56(*goM5,M2ES\">\r\n                                <field name=\"delay_s\">1000</field>\r\n                              </block>\r\n                            </next>\r\n                          </block>\r\n                        </next>\r\n                      </block>\r\n                    </next>\r\n                  </block>\r\n                </next>\r\n              </block>\r\n            </next>\r\n          </block>\r\n        </next>\r\n      </block>\r\n    </statement>\r\n  </block>\r\n  <block type=\"algorithm\" id=\"^p}^aaT[%+\\`,i9VU(A)Y\" x=\"127\" y=\"255\">\r\n    <field name=\"algorithm_name\">color_change</field>\r\n    <field name=\"robot_state_label\" id=\"s]bRmbZ++\\`1c?{z!/d_:\">ROBOT_STATE</field>\r\n    <field name=\"robot_state_value\">1</field>\r\n    <statement name=\"algo_body\">\r\n      <block type=\"controls_if\" id=\"=4kTK+MPC(%=/uZS6_A}\">\r\n        <mutation elseif=\"1\" else=\"1\"></mutation>\r\n        <value name=\"IF0\">\r\n          <block type=\"logic_compare\" id=\"d%{shr+U]1],FQR:j+2P\">\r\n            <field name=\"OP\">EQ</field>\r\n            <value name=\"A\">\r\n              <block type=\"variables_get\" id=\"=4~h]lG^?vDJm?fk=hOe\">\r\n                <field name=\"VAR\" id=\"s]bRmbZ++\\`1c?{z!/d_:\">ROBOT_STATE</field>\r\n              </block>\r\n            </value>\r\n            <value name=\"B\">\r\n              <block type=\"math_number\" id=\"_^Mp:]tiu+o6ktoK52;u\">\r\n                <field name=\"NUM\">0</field>\r\n              </block>\r\n            </value>\r\n          </block>\r\n        </value>\r\n        <statement name=\"DO0\">\r\n          <block type=\"procedures_callnoreturn\" id=\"MyZNMgTN:b?ci|vV1DNj\">\r\n            <mutation name=\"algorithm_execute\"></mutation>\r\n            <next>\r\n              <block type=\"delay\" id=\"j*xQRW5EQMB8QM:WnR}^\">\r\n                <field name=\"delay_s\">50</field>\r\n              </block>\r\n            </next>\r\n          </block>\r\n        </statement>\r\n        <value name=\"IF1\">\r\n          <block type=\"logic_compare\" id=\"d1sw^kc7g~76A(q+JVc|\">\r\n            <field name=\"OP\">EQ</field>\r\n            <value name=\"A\">\r\n              <block type=\"variables_get\" id=\"^A;L^1Uex#~(2GsxW2(e\">\r\n                <field name=\"VAR\" id=\"s]bRmbZ++\\`1c?{z!/d_:\">ROBOT_STATE</field>\r\n              </block>\r\n            </value>\r\n            <value name=\"B\">\r\n              <block type=\"math_number\" id=\"eDuJ1n)YV_40B|DQS,8j\">\r\n                <field name=\"NUM\">1</field>\r\n              </block>\r\n            </value>\r\n          </block>\r\n        </value>\r\n        <statement name=\"DO1\">\r\n          <block type=\"procedures_callnoreturn\" id=\"3*$GKuhiib(7iZ,?W|[P\">\r\n            <mutation name=\"algorithm_setup\"></mutation>\r\n            <next>\r\n              <block type=\"variables_set\" id=\"\\`8:h:pYq0F2Dihiq\\`pHa\">\r\n                <field name=\"VAR\" id=\"s]bRmbZ++\\`1c?{z!/d_:\">ROBOT_STATE</field>\r\n                <value name=\"VALUE\">\r\n                  <block type=\"math_number\" id=\"!TxGb=Gt6=\\`dLJFg|\\`NX\">\r\n                    <field name=\"NUM\">10</field>\r\n                  </block>\r\n                </value>\r\n              </block>\r\n            </next>\r\n          </block>\r\n        </statement>\r\n        <statement name=\"ELSE\">\r\n          <block type=\"delay\" id=\"f=Y{\\`}AL%qW,OkncggP%\">\r\n            <field name=\"delay_s\">100</field>\r\n          </block>\r\n        </statement>\r\n      </block>\r\n    </statement>\r\n  </block>\r\n  <block type=\"algorithm_interrupt\" id=\":Ri6n|XI#ytiol.L|cNq\" x=\"788\" y=\"407\">\r\n    <field name=\"interrupt_variable\" id=\"x$leYs{fIiSO1QApRb*c\">interrupt</field>\r\n    <field name=\"msg_variable\" id=\"C}k8;%~r]6mMiJiCA2b%\">msg</field>\r\n  </block>\r\n</xml>`;\r\n\r\n  return (\r\n    <div className=\"mt-5 mb-5\">\r\n      {/* <BlocklyPlayground /> */}\r\n      <BlocklyComponent\r\n        readOnly={false}\r\n        trashcan={true}\r\n        media={\"https://blockly-demo.appspot.com/static/media/\"}\r\n        move={{\r\n          scrollbars: true,\r\n          drag: true,\r\n          wheel: true,\r\n        }}\r\n        grid={{\r\n          spacing: 20,\r\n          length: 1,\r\n          colour: \"#434343\",\r\n          snap: false,\r\n        }}\r\n        zoom={{\r\n          controls: true,\r\n          wheel: true,\r\n          startScale: 1,\r\n          maxScale: 3,\r\n          minScale: 0.3,\r\n          scaleSpeed: 1.2,\r\n        }}\r\n        initialXml={generatedXmlCode ? generatedXmlCode : initialXml}\r\n      >\r\n        <Category name=\"Logic\">\r\n          <Block type=\"logic_compare\" />\r\n          <Block type=\"logic_operation\" />\r\n          <Block type=\"logic_negate\" />\r\n          <Block type=\"logic_boolean\" />\r\n          <Block type=\"logic_null\" />\r\n          <Block type=\"logic_ternary\" />\r\n        </Category>\r\n\r\n        <Category name=\"Algorithm\">\r\n          <Block type=\"algorithm\" />\r\n          <Block type=\"algorithm_interrupt\" />\r\n        </Category>\r\n\r\n        <Category name=\"Control Flow\">\r\n          <Block type=\"controls_if\" />\r\n          <Block type=\"delay\" />\r\n        </Category>\r\n\r\n        <Category name=\"Inputs\"></Category>\r\n\r\n        <Category name=\"MQTT\">\r\n          <Block type=\"check_mqtt_messages\" />\r\n          <Block type=\"publish\" />\r\n          <Block type=\"publish_with_content\" />\r\n          <Block type=\"subscribe\" />\r\n        </Category>\r\n\r\n        <Category name=\"Motors\">\r\n          <Block type=\"drive_motors\" />\r\n        </Category>\r\n\r\n        <Category name=\"Outputs\">\r\n          <Block type=\"serial_print\" />\r\n          <Block type=\"neo_color_wave\" />\r\n        </Category>\r\n\r\n        <Category name=\"Variables\">\r\n          {/* <Block type=\"serial_print\" /> */}\r\n          <Block type=\"variables_init\"></Block>\r\n          <Block type=\"variables_get\"></Block>\r\n          <Block type=\"variables_set\"></Block>\r\n        </Category>\r\n\r\n        <Category name=\"String\">\r\n          <Block type=\"text\" />\r\n          <Block type=\"text_multiline\" />\r\n          <Block type=\"text_join\" />\r\n          <Block type=\"text_create_join_container\" />\r\n          <Block type=\"text_create_join_item\" />\r\n          <Block type=\"text_append\" />\r\n          <Block type=\"text_length\" />\r\n          <Block type=\"text_isEmpty\" />\r\n          <Block type=\"text_indexOf\" />\r\n          <Block type=\"text_charAt\" />\r\n          <Block type=\"text_getSubstring\" />\r\n          <Block type=\"text_changeCase\" />\r\n          <Block type=\"text_replace\" />\r\n          <Block type=\"text_reverse\" />\r\n        </Category>\r\n\r\n        <Category name=\"Math\">\r\n          <Block type=\"math_number\"></Block>\r\n          <Block type=\"math_arithmetic\"></Block>\r\n          <Block type=\"math_trig\"></Block>\r\n          <Block type=\"math_number_property\"></Block>\r\n          <Block type=\"math_change\"></Block>\r\n          <Block type=\"math_constant\"></Block>\r\n          <Block type=\"math_round\"></Block>\r\n          <Block type=\"math_modulo\"></Block>\r\n          <Block type=\"math_constrain\"></Block>\r\n          <Block type=\"math_random_float\"></Block>\r\n        </Category>\r\n        <Category name=\"Functions\" custom=\"PROCEDURE\"></Category>\r\n\r\n        <Category name=\"ESP\">\r\n          <Block type=\"chip_id\"></Block>\r\n        </Category>\r\n      </BlocklyComponent>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Button, Input, message, Steps } from 'antd' \r\nimport io from 'socket.io-client';\r\nimport { decrease, increase } from '../../Redux/CodeGenSteps';\r\nimport {CodeOutlined} from '@ant-design/icons'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DynamicCodeGenerationForm from './DynamicCodeGenerationForm';\r\nimport Mqtt from '../Mqtt/Mqtt';\r\nimport Playground from '../Playground/Playground';\r\nimport { CodeSandboxOutlined, FireOutlined, StepBackwardOutlined, CloudUploadOutlined, StepForwardOutlined, BuildOutlined } from '@ant-design/icons';\r\n\r\n// socket.io connection socket\r\nconst socket = io(\"http://localhost:5001\");\r\n\r\nfunction Dashboard() {\r\n  // antd steps\r\n  const { Step } = Steps\r\n\r\n  // socket related variables\r\n  const [isConnected, setIsConnected] = useState(socket.connected);\r\n  const [msgs, setMsgs] = useState([])\r\n\r\n  // redux related variables\r\n  const dispatch = useDispatch()\r\n  const { firmwareFile, dynamicCodeObject, algorithmName, generatedCppCode, generatedXmlCode } = useSelector((state) => state.firmware);\r\n  const { step } = useSelector((state) => state.step);\r\n  const [robotId, setRobotId] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      setIsConnected(true);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      setIsConnected(false);\r\n    });\r\n\r\n    socket.on('build', (data) => {\r\n      setMsgs(msgs => [...msgs, data])\r\n      var terminalDiv = document.getElementById(\"terminalDiv\");\r\n      terminalDiv.scrollTop = terminalDiv.scrollHeight;\r\n    });\r\n\r\n    // the listeners must be removed in the cleanup step, in order to prevent multiple event registrations\r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('disconnect');\r\n      socket.off('build');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n      console.log(`Socket connection established: ${isConnected}`)\r\n  }, [isConnected])\r\n\r\n\r\n  // send build request\r\n  const handleBuild = async () => {\r\n    setMsgs([])\r\n    try {\r\n      const response = await axios.post(`http://localhost:5001/build?dir=${firmwareFile}`, {features: dynamicCodeObject, algorithm_name: algorithmName, algorithm_body: generatedCppCode, robot_id: robotId});\r\n\r\n      if (response?.data?.msg) {\r\n        message.loading(response.data.msg)\r\n      }\r\n      \r\n\r\n    } catch (error) {\r\n      message.error(error.message)\r\n    }\r\n  }\r\n\r\n  const handleRobotId = (value) => {\r\n    if (value < 0 || value > 15) {\r\n      message.error(\"Robot id should be between 1-15\")\r\n      setRobotId(null)\r\n    } else {\r\n      setRobotId(value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='mt-5 mb-5'>\r\n\r\n      {/* Antd steps component */}\r\n      <div className='col-lg-10 mt-3 mb-5 mx-auto step-area'>\r\n        <Steps current={step}>\r\n          <Step title=\"Algorithm Generation\" icon={<div style={{marginTop: '-5px'}}><BuildOutlined /></div>} />\r\n          <Step title=\"Dynamic Code Generation\" icon={<div style={{marginTop: '-5px'}}><CodeSandboxOutlined /></div>} />\r\n          <Step title=\"Build\" icon={<div style={{marginTop: '-5px'}}><FireOutlined /></div>} />\r\n          <Step title=\"OTA Upload\" icon={<div style={{marginTop: '-5px'}}><CloudUploadOutlined /></div>} />\r\n        </Steps>\r\n      </div>\r\n\r\n      {/* Blockly Playground */}\r\n      {\r\n        step === 0 &&\r\n        <Playground />\r\n      }\r\n\r\n      {/* Dynamic code generation step */}\r\n      {\r\n        step === 1 &&\r\n        <DynamicCodeGenerationForm />\r\n      }\r\n\r\n      {/* Build area */}\r\n      {\r\n        step === 2 &&\r\n        <>\r\n          <div className='mt-4'>\r\n            <div className='terminal p-4' id=\"terminalDiv\">\r\n              <span className='response-msg text-light'>\r\n                {msgs}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mt-4 d-flex'>\r\n            <Input \r\n              onChange={(e) => handleRobotId(e.target.value)}\r\n              value={robotId}\r\n              type=\"number\"\r\n              placeholder=\"Specify the robot ID\"\r\n            />\r\n\r\n            <Button type=\"primary\" onClick={() => handleBuild()} style={{marginLeft: '5px'}}>\r\n              <div className='d-flex'>\r\n                <div style={{marginTop: '-3px', marginRight: '3px'}}><CodeOutlined /></div>\r\n                <div>Build</div>\r\n              </div>\r\n            </Button>\r\n          </div>\r\n\r\n          <div className='mt-4 d-flex justify-content-center'>\r\n            {/* decrease the step to go back */}\r\n            <Button style={{marginRight: '5px'}} onClick={() => dispatch(decrease())}>\r\n              <div className='d-flex'>\r\n                <div style={{marginTop: '-3px', marginRight: '3px'}}><StepBackwardOutlined /></div>\r\n                <div>Back</div>\r\n              </div>\r\n            </Button>\r\n\r\n            <Button onClick={() =>dispatch(increase())} style={{marginLeft: '5px'}}>\r\n              <div className='d-flex'>\r\n                <div style={{marginTop: '-3px', marginRight: '3px'}}><StepForwardOutlined /></div>\r\n                <div>Next</div>\r\n              </div>\r\n            </Button>\r\n          </div>\r\n        </>\r\n      }\r\n\r\n      {/* to handle OTA upload */}\r\n      {\r\n        step === 3 &&\r\n        <Mqtt />\r\n\r\n                \r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport Dashboard from './Dashboard/Dashboard'\r\nimport Mqtt from './Mqtt/Mqtt'\r\nimport Playground from './Playground/Playground'\r\n\r\nfunction Pages() {\r\n  return (\r\n    <Routes>\r\n        <Route path=\"/\" exact element={<Dashboard />} />\r\n        <Route path=\"/mqtt\" exact element={<Mqtt />} />\r\n        <Route path=\"/playground\" exact element={<Playground />} />\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default Pages","import { Layout } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport SiderComponent from './components/Sider/SiderComponent';\r\nimport FooterComponent from './components/Footer/FooterComponent';\r\nimport Pages from './pages/Pages';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nfunction Layoutview() {\r\n\r\n  const { Content } = Layout;\r\n  const { margin } = useSelector((state) => state.margin);\r\n  const [marginVariable, setMarginVariable] = useState('side-menu-margin-extended')\r\n\r\n  useEffect(() => {\r\n    if (!margin) {\r\n      setMarginVariable('side-menu-margin-extended')\r\n    } else {\r\n      setMarginVariable('side-menu-margin')\r\n    }\r\n  }, [margin])\r\n\r\n  return (\r\n    // main layout of the website\r\n    <Layout className={marginVariable}>\r\n\r\n      {/* side menu component */}\r\n      <div className='side-menu'>\r\n        <SiderComponent />\r\n      </div>\r\n      \r\n      <Layout style={{minHeight: '100vh'}}>\r\n        \r\n            <Content>\r\n              <div className='container-fluid mt-4'>\r\n                <Pages />\r\n              </div>\r\n            </Content>\r\n\r\n            <FooterComponent />\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Layoutview\r\n","import './App.css';\r\nimport Layoutview from './Layoutview';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Layoutview />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport SidemenuMarginReducer from \"./SidemenuMargin\";\r\nimport firmwareFileSliceReducer from \"./FirmwareFile\";\r\nimport CodeGenStepsReducer from \"./CodeGenSteps\";\r\n\r\nexport const Store = configureStore({\r\n  reducer: {\r\n    margin: SidemenuMarginReducer,\r\n    firmware: firmwareFileSliceReducer,\r\n    step: CodeGenStepsReducer\r\n  }\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Store } from './Redux/Store'\r\nimport { Provider } from \"react-redux\";\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n\r\n    <Provider store={Store}>\r\n        <App />\r\n    </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}